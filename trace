Grammar

    0 $accept: statements $end

    1 statements: statement
    2           | statements statement

    3 statement: create_stmt
    4          | describe_stmt
    5          | drop_stmt
    6          | insert_stmt
    7          | delete_stmt
    8          | update_stmt
    9          | select_stmt

   10 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   11            | CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

   12 primary_key: PRIMARY KEY OPEN_PAR columns CLOSE_PAR

   13 foreign_keys: foreign_key
   14             | foreign_keys COMMA foreign_key

   15 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

   16 columns: column
   17        | columns COMMA column

   18 column: IDENTIFIER

   19 definitions: definition
   20            | definitions COMMA definition

   21 definition: IDENTIFIER attr_type
   22           | IDENTIFIER attr_type CHECK expr

   23 attr_type: CHAR OPEN_PAR NUMBER CLOSE_PAR
   24          | INT OPEN_PAR NUMBER CLOSE_PAR
   25          | DECIMAL OPEN_PAR NUMBER CLOSE_PAR
   26          | INT
   27          | DECIMAL

   28 expr: or_expr

   29 or_expr: and_expr
   30        | or_expr OR and_expr

   31 and_expr: and_expr AND condition
   32         | condition

   33 condition: IDENTIFIER GE NUMBER
   34          | IDENTIFIER GT NUMBER
   35          | IDENTIFIER NE NUMBER
   36          | IDENTIFIER LT NUMBER
   37          | IDENTIFIER LE NUMBER
   38          | IDENTIFIER E NUMBER
   39          | OPEN_PAR expr CLOSE_PAR

   40 describe_stmt: DESCRIBE IDENTIFIER SEMICOLON

   41 drop_stmt: DROP TABLE IDENTIFIER SEMICOLON

   42 insert_stmt: INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON

   43 list_values: list_value
   44            | list_values COMMA list_value

   45 list_value: NUMBER
   46           | FLOAT
   47           | STRING

   48 delete_stmt: DELETE FROM IDENTIFIER WHERE sexpr SEMICOLON

   49 sexpr: sor_expr

   50 sor_expr: sand_expr
   51         | sor_expr OR sand_expr

   52 sand_expr: sand_expr AND scond_b
   53          | scond_b

   54 scond_b: IDENTIFIER GE diff_value
   55        | IDENTIFIER GT diff_value
   56        | IDENTIFIER NE diff_value
   57        | IDENTIFIER LT diff_value
   58        | IDENTIFIER LE diff_value
   59        | IDENTIFIER E diff_value
   60        | OPEN_PAR sexpr CLOSE_PAR

   61 diff_value: IDENTIFIER
   62           | diff_value_without_identifier

   63 diff_value_without_identifier: STRING
   64                              | NUMBER
   65                              | FLOAT

   66 update_stmt: UPDATE IDENTIFIER SET update_values WHERE sexpr SEMICOLON

   67 update_values: update_value
   68              | update_values COMMA update_value

   69 update_value: IDENTIFIER E diff_value_without_identifier

   70 select_stmt: SELECT columns FROM table_list WHERE sexpr SEMICOLON

   71 table_list: IDENTIFIER
   72           | table_list COMMA IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CREATE (258) 10 11
    TABLE (259) 10 11 41
    CHECK (260) 22
    PRIMARY (261) 12
    KEY (262) 12 15
    FOREIGN (263) 15
    REFERENCES (264) 15
    CHAR (265) 23
    INT (266) 24 26
    DECIMAL (267) 25 27
    OPEN_PAR (268) 10 11 12 15 23 24 25 39 42 60
    CLOSE_PAR (269) 10 11 12 15 23 24 25 39 42 60
    SEMICOLON (270) 10 11 40 41 42 48 66 70
    COMMA (271) 10 11 14 17 20 44 68 72
    OR (272) 30 51
    AND (273) 31 52
    GE (274) 33 54
    GT (275) 34 55
    LE (276) 37 58
    LT (277) 36 57
    E (278) 38 59 69
    NE (279) 35 56
    DESCRIBE (280) 40
    DROP (281) 41
    INSERT (282) 42
    INTO (283) 42
    VALUES (284) 42
    DELETE (285) 48
    FROM (286) 48 70
    WHERE (287) 48 66 70
    UPDATE (288) 66
    SET (289) 66
    SELECT (290) 70
    IDENTIFIER <string> (291) 10 11 15 18 21 22 33 34 35 36 37 38 40 41 42 48 54 55 56 57 58 59 61 66 69 71 72
    STRING <string> (292) 47 63
    NUMBER <ival> (293) 23 24 25 33 34 35 36 37 38 45 64
    FLOAT <fval> (294) 46 65


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    statements (41)
        on left: 1 2
        on right: 0 2
    statement (42)
        on left: 3 4 5 6 7 8 9
        on right: 1 2
    create_stmt (43)
        on left: 10 11
        on right: 3
    primary_key <string_array> (44)
        on left: 12
        on right: 10 11
    foreign_keys <refer_list> (45)
        on left: 13 14
        on right: 10 14
    foreign_key <refer> (46)
        on left: 15
        on right: 13 14
    columns <string_array> (47)
        on left: 16 17
        on right: 12 17 70
    column <string> (48)
        on left: 18
        on right: 15 16 17
    definitions <cols> (49)
        on left: 19 20
        on right: 10 11 20
    definition <column> (50)
        on left: 21 22
        on right: 19 20
    attr_type <column> (51)
        on left: 23 24 25 26 27
        on right: 21 22
    expr <condition> (52)
        on left: 28
        on right: 22 39
    or_expr <condition> (53)
        on left: 29 30
        on right: 28 30
    and_expr <condition> (54)
        on left: 31 32
        on right: 29 30 31
    condition <condition> (55)
        on left: 33 34 35 36 37 38 39
        on right: 31 32
    describe_stmt (56)
        on left: 40
        on right: 4
    drop_stmt (57)
        on left: 41
        on right: 5
    insert_stmt (58)
        on left: 42
        on right: 6
    list_values <literals_list> (59)
        on left: 43 44
        on right: 42 44
    list_value <literal> (60)
        on left: 45 46 47
        on right: 43 44
    delete_stmt (61)
        on left: 48
        on right: 7
    sexpr <scond> (62)
        on left: 49
        on right: 48 60 66 70
    sor_expr <scond> (63)
        on left: 50 51
        on right: 49 51
    sand_expr <scond> (64)
        on left: 52 53
        on right: 50 51 52
    scond_b <scond> (65)
        on left: 54 55 56 57 58 59 60
        on right: 52 53
    diff_value <literal> (66)
        on left: 61 62
        on right: 54 55 56 57 58 59
    diff_value_without_identifier <literal> (67)
        on left: 63 64 65
        on right: 62 69
    update_stmt (68)
        on left: 66
        on right: 8
    update_values <list_sets> (69)
        on left: 67 68
        on right: 66 68
    update_value <update_set_val> (70)
        on left: 69
        on right: 67 68
    select_stmt (71)
        on left: 70
        on right: 9
    table_list <string_array> (72)
        on left: 71 72
        on right: 70 72


State 0

    0 $accept: • statements $end
    1 statements: • statement
    2           | • statements statement
    3 statement: • create_stmt
    4          | • describe_stmt
    5          | • drop_stmt
    6          | • insert_stmt
    7          | • delete_stmt
    8          | • update_stmt
    9          | • select_stmt
   10 create_stmt: • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   11            | • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON
   40 describe_stmt: • DESCRIBE IDENTIFIER SEMICOLON
   41 drop_stmt: • DROP TABLE IDENTIFIER SEMICOLON
   42 insert_stmt: • INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON
   48 delete_stmt: • DELETE FROM IDENTIFIER WHERE sexpr SEMICOLON
   66 update_stmt: • UPDATE IDENTIFIER SET update_values WHERE sexpr SEMICOLON
   70 select_stmt: • SELECT columns FROM table_list WHERE sexpr SEMICOLON

    CREATE    shift, and go to state 1
    DESCRIBE  shift, and go to state 2
    DROP      shift, and go to state 3
    INSERT    shift, and go to state 4
    DELETE    shift, and go to state 5
    UPDATE    shift, and go to state 6
    SELECT    shift, and go to state 7

    statements     go to state 8
    statement      go to state 9
    create_stmt    go to state 10
    describe_stmt  go to state 11
    drop_stmt      go to state 12
    insert_stmt    go to state 13
    delete_stmt    go to state 14
    update_stmt    go to state 15
    select_stmt    go to state 16


State 1

   10 create_stmt: CREATE • TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   11            | CREATE • TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

    TABLE  shift, and go to state 17


State 2

   40 describe_stmt: DESCRIBE • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 18


State 3

   41 drop_stmt: DROP • TABLE IDENTIFIER SEMICOLON

    TABLE  shift, and go to state 19


State 4

   42 insert_stmt: INSERT • INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON

    INTO  shift, and go to state 20


State 5

   48 delete_stmt: DELETE • FROM IDENTIFIER WHERE sexpr SEMICOLON

    FROM  shift, and go to state 21


State 6

   66 update_stmt: UPDATE • IDENTIFIER SET update_values WHERE sexpr SEMICOLON

    IDENTIFIER  shift, and go to state 22


State 7

   16 columns: • column
   17        | • columns COMMA column
   18 column: • IDENTIFIER
   70 select_stmt: SELECT • columns FROM table_list WHERE sexpr SEMICOLON

    IDENTIFIER  shift, and go to state 23

    columns  go to state 24
    column   go to state 25


State 8

    0 $accept: statements • $end
    2 statements: statements • statement
    3 statement: • create_stmt
    4          | • describe_stmt
    5          | • drop_stmt
    6          | • insert_stmt
    7          | • delete_stmt
    8          | • update_stmt
    9          | • select_stmt
   10 create_stmt: • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   11            | • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON
   40 describe_stmt: • DESCRIBE IDENTIFIER SEMICOLON
   41 drop_stmt: • DROP TABLE IDENTIFIER SEMICOLON
   42 insert_stmt: • INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON
   48 delete_stmt: • DELETE FROM IDENTIFIER WHERE sexpr SEMICOLON
   66 update_stmt: • UPDATE IDENTIFIER SET update_values WHERE sexpr SEMICOLON
   70 select_stmt: • SELECT columns FROM table_list WHERE sexpr SEMICOLON

    $end      shift, and go to state 26
    CREATE    shift, and go to state 1
    DESCRIBE  shift, and go to state 2
    DROP      shift, and go to state 3
    INSERT    shift, and go to state 4
    DELETE    shift, and go to state 5
    UPDATE    shift, and go to state 6
    SELECT    shift, and go to state 7

    statement      go to state 27
    create_stmt    go to state 10
    describe_stmt  go to state 11
    drop_stmt      go to state 12
    insert_stmt    go to state 13
    delete_stmt    go to state 14
    update_stmt    go to state 15
    select_stmt    go to state 16


State 9

    1 statements: statement •

    $default  reduce using rule 1 (statements)


State 10

    3 statement: create_stmt •

    $default  reduce using rule 3 (statement)


State 11

    4 statement: describe_stmt •

    $default  reduce using rule 4 (statement)


State 12

    5 statement: drop_stmt •

    $default  reduce using rule 5 (statement)


State 13

    6 statement: insert_stmt •

    $default  reduce using rule 6 (statement)


State 14

    7 statement: delete_stmt •

    $default  reduce using rule 7 (statement)


State 15

    8 statement: update_stmt •

    $default  reduce using rule 8 (statement)


State 16

    9 statement: select_stmt •

    $default  reduce using rule 9 (statement)


State 17

   10 create_stmt: CREATE TABLE • IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   11            | CREATE TABLE • IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

    IDENTIFIER  shift, and go to state 28


State 18

   40 describe_stmt: DESCRIBE IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 29


State 19

   41 drop_stmt: DROP TABLE • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 30


State 20

   42 insert_stmt: INSERT INTO • IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON

    IDENTIFIER  shift, and go to state 31


State 21

   48 delete_stmt: DELETE FROM • IDENTIFIER WHERE sexpr SEMICOLON

    IDENTIFIER  shift, and go to state 32


State 22

   66 update_stmt: UPDATE IDENTIFIER • SET update_values WHERE sexpr SEMICOLON

    SET  shift, and go to state 33


State 23

   18 column: IDENTIFIER •

    $default  reduce using rule 18 (column)


State 24

   17 columns: columns • COMMA column
   70 select_stmt: SELECT columns • FROM table_list WHERE sexpr SEMICOLON

    COMMA  shift, and go to state 34
    FROM   shift, and go to state 35


State 25

   16 columns: column •

    $default  reduce using rule 16 (columns)


State 26

    0 $accept: statements $end •

    $default  accept


State 27

    2 statements: statements statement •

    $default  reduce using rule 2 (statements)


State 28

   10 create_stmt: CREATE TABLE IDENTIFIER • OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   11            | CREATE TABLE IDENTIFIER • OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

    OPEN_PAR  shift, and go to state 36


State 29

   40 describe_stmt: DESCRIBE IDENTIFIER SEMICOLON •

    $default  reduce using rule 40 (describe_stmt)


State 30

   41 drop_stmt: DROP TABLE IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 37


State 31

   42 insert_stmt: INSERT INTO IDENTIFIER • VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON

    VALUES  shift, and go to state 38


State 32

   48 delete_stmt: DELETE FROM IDENTIFIER • WHERE sexpr SEMICOLON

    WHERE  shift, and go to state 39


State 33

   66 update_stmt: UPDATE IDENTIFIER SET • update_values WHERE sexpr SEMICOLON
   67 update_values: • update_value
   68              | • update_values COMMA update_value
   69 update_value: • IDENTIFIER E diff_value_without_identifier

    IDENTIFIER  shift, and go to state 40

    update_values  go to state 41
    update_value   go to state 42


State 34

   17 columns: columns COMMA • column
   18 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 23

    column  go to state 43


State 35

   70 select_stmt: SELECT columns FROM • table_list WHERE sexpr SEMICOLON
   71 table_list: • IDENTIFIER
   72           | • table_list COMMA IDENTIFIER

    IDENTIFIER  shift, and go to state 44

    table_list  go to state 45


State 36

   10 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR • definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   11            | CREATE TABLE IDENTIFIER OPEN_PAR • definitions COMMA primary_key CLOSE_PAR SEMICOLON
   19 definitions: • definition
   20            | • definitions COMMA definition
   21 definition: • IDENTIFIER attr_type
   22           | • IDENTIFIER attr_type CHECK expr

    IDENTIFIER  shift, and go to state 46

    definitions  go to state 47
    definition   go to state 48


State 37

   41 drop_stmt: DROP TABLE IDENTIFIER SEMICOLON •

    $default  reduce using rule 41 (drop_stmt)


State 38

   42 insert_stmt: INSERT INTO IDENTIFIER VALUES • OPEN_PAR list_values CLOSE_PAR SEMICOLON

    OPEN_PAR  shift, and go to state 49


State 39

   48 delete_stmt: DELETE FROM IDENTIFIER WHERE • sexpr SEMICOLON
   49 sexpr: • sor_expr
   50 sor_expr: • sand_expr
   51         | • sor_expr OR sand_expr
   52 sand_expr: • sand_expr AND scond_b
   53          | • scond_b
   54 scond_b: • IDENTIFIER GE diff_value
   55        | • IDENTIFIER GT diff_value
   56        | • IDENTIFIER NE diff_value
   57        | • IDENTIFIER LT diff_value
   58        | • IDENTIFIER LE diff_value
   59        | • IDENTIFIER E diff_value
   60        | • OPEN_PAR sexpr CLOSE_PAR

    OPEN_PAR    shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    sexpr      go to state 52
    sor_expr   go to state 53
    sand_expr  go to state 54
    scond_b    go to state 55


State 40

   69 update_value: IDENTIFIER • E diff_value_without_identifier

    E  shift, and go to state 56


State 41

   66 update_stmt: UPDATE IDENTIFIER SET update_values • WHERE sexpr SEMICOLON
   68 update_values: update_values • COMMA update_value

    COMMA  shift, and go to state 57
    WHERE  shift, and go to state 58


State 42

   67 update_values: update_value •

    $default  reduce using rule 67 (update_values)


State 43

   17 columns: columns COMMA column •

    $default  reduce using rule 17 (columns)


State 44

   71 table_list: IDENTIFIER •

    $default  reduce using rule 71 (table_list)


State 45

   70 select_stmt: SELECT columns FROM table_list • WHERE sexpr SEMICOLON
   72 table_list: table_list • COMMA IDENTIFIER

    COMMA  shift, and go to state 59
    WHERE  shift, and go to state 60


State 46

   21 definition: IDENTIFIER • attr_type
   22           | IDENTIFIER • attr_type CHECK expr
   23 attr_type: • CHAR OPEN_PAR NUMBER CLOSE_PAR
   24          | • INT OPEN_PAR NUMBER CLOSE_PAR
   25          | • DECIMAL OPEN_PAR NUMBER CLOSE_PAR
   26          | • INT
   27          | • DECIMAL

    CHAR     shift, and go to state 61
    INT      shift, and go to state 62
    DECIMAL  shift, and go to state 63

    attr_type  go to state 64


State 47

   10 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions • COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   11            | CREATE TABLE IDENTIFIER OPEN_PAR definitions • COMMA primary_key CLOSE_PAR SEMICOLON
   20 definitions: definitions • COMMA definition

    COMMA  shift, and go to state 65


State 48

   19 definitions: definition •

    $default  reduce using rule 19 (definitions)


State 49

   42 insert_stmt: INSERT INTO IDENTIFIER VALUES OPEN_PAR • list_values CLOSE_PAR SEMICOLON
   43 list_values: • list_value
   44            | • list_values COMMA list_value
   45 list_value: • NUMBER
   46           | • FLOAT
   47           | • STRING

    STRING  shift, and go to state 66
    NUMBER  shift, and go to state 67
    FLOAT   shift, and go to state 68

    list_values  go to state 69
    list_value   go to state 70


State 50

   49 sexpr: • sor_expr
   50 sor_expr: • sand_expr
   51         | • sor_expr OR sand_expr
   52 sand_expr: • sand_expr AND scond_b
   53          | • scond_b
   54 scond_b: • IDENTIFIER GE diff_value
   55        | • IDENTIFIER GT diff_value
   56        | • IDENTIFIER NE diff_value
   57        | • IDENTIFIER LT diff_value
   58        | • IDENTIFIER LE diff_value
   59        | • IDENTIFIER E diff_value
   60        | • OPEN_PAR sexpr CLOSE_PAR
   60        | OPEN_PAR • sexpr CLOSE_PAR

    OPEN_PAR    shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    sexpr      go to state 71
    sor_expr   go to state 53
    sand_expr  go to state 54
    scond_b    go to state 55


State 51

   54 scond_b: IDENTIFIER • GE diff_value
   55        | IDENTIFIER • GT diff_value
   56        | IDENTIFIER • NE diff_value
   57        | IDENTIFIER • LT diff_value
   58        | IDENTIFIER • LE diff_value
   59        | IDENTIFIER • E diff_value

    GE  shift, and go to state 72
    GT  shift, and go to state 73
    LE  shift, and go to state 74
    LT  shift, and go to state 75
    E   shift, and go to state 76
    NE  shift, and go to state 77


State 52

   48 delete_stmt: DELETE FROM IDENTIFIER WHERE sexpr • SEMICOLON

    SEMICOLON  shift, and go to state 78


State 53

   49 sexpr: sor_expr •  [CLOSE_PAR, SEMICOLON]
   51 sor_expr: sor_expr • OR sand_expr

    OR  shift, and go to state 79

    $default  reduce using rule 49 (sexpr)


State 54

   50 sor_expr: sand_expr •  [CLOSE_PAR, SEMICOLON, OR]
   52 sand_expr: sand_expr • AND scond_b

    AND  shift, and go to state 80

    $default  reduce using rule 50 (sor_expr)


State 55

   53 sand_expr: scond_b •

    $default  reduce using rule 53 (sand_expr)


State 56

   63 diff_value_without_identifier: • STRING
   64                              | • NUMBER
   65                              | • FLOAT
   69 update_value: IDENTIFIER E • diff_value_without_identifier

    STRING  shift, and go to state 81
    NUMBER  shift, and go to state 82
    FLOAT   shift, and go to state 83

    diff_value_without_identifier  go to state 84


State 57

   68 update_values: update_values COMMA • update_value
   69 update_value: • IDENTIFIER E diff_value_without_identifier

    IDENTIFIER  shift, and go to state 40

    update_value  go to state 85


State 58

   49 sexpr: • sor_expr
   50 sor_expr: • sand_expr
   51         | • sor_expr OR sand_expr
   52 sand_expr: • sand_expr AND scond_b
   53          | • scond_b
   54 scond_b: • IDENTIFIER GE diff_value
   55        | • IDENTIFIER GT diff_value
   56        | • IDENTIFIER NE diff_value
   57        | • IDENTIFIER LT diff_value
   58        | • IDENTIFIER LE diff_value
   59        | • IDENTIFIER E diff_value
   60        | • OPEN_PAR sexpr CLOSE_PAR
   66 update_stmt: UPDATE IDENTIFIER SET update_values WHERE • sexpr SEMICOLON

    OPEN_PAR    shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    sexpr      go to state 86
    sor_expr   go to state 53
    sand_expr  go to state 54
    scond_b    go to state 55


State 59

   72 table_list: table_list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 87


State 60

   49 sexpr: • sor_expr
   50 sor_expr: • sand_expr
   51         | • sor_expr OR sand_expr
   52 sand_expr: • sand_expr AND scond_b
   53          | • scond_b
   54 scond_b: • IDENTIFIER GE diff_value
   55        | • IDENTIFIER GT diff_value
   56        | • IDENTIFIER NE diff_value
   57        | • IDENTIFIER LT diff_value
   58        | • IDENTIFIER LE diff_value
   59        | • IDENTIFIER E diff_value
   60        | • OPEN_PAR sexpr CLOSE_PAR
   70 select_stmt: SELECT columns FROM table_list WHERE • sexpr SEMICOLON

    OPEN_PAR    shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    sexpr      go to state 88
    sor_expr   go to state 53
    sand_expr  go to state 54
    scond_b    go to state 55


State 61

   23 attr_type: CHAR • OPEN_PAR NUMBER CLOSE_PAR

    OPEN_PAR  shift, and go to state 89


State 62

   24 attr_type: INT • OPEN_PAR NUMBER CLOSE_PAR
   26          | INT •  [CHECK, COMMA]

    OPEN_PAR  shift, and go to state 90

    $default  reduce using rule 26 (attr_type)


State 63

   25 attr_type: DECIMAL • OPEN_PAR NUMBER CLOSE_PAR
   27          | DECIMAL •  [CHECK, COMMA]

    OPEN_PAR  shift, and go to state 91

    $default  reduce using rule 27 (attr_type)


State 64

   21 definition: IDENTIFIER attr_type •  [COMMA]
   22           | IDENTIFIER attr_type • CHECK expr

    CHECK  shift, and go to state 92

    $default  reduce using rule 21 (definition)


State 65

   10 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA • primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   11            | CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA • primary_key CLOSE_PAR SEMICOLON
   12 primary_key: • PRIMARY KEY OPEN_PAR columns CLOSE_PAR
   20 definitions: definitions COMMA • definition
   21 definition: • IDENTIFIER attr_type
   22           | • IDENTIFIER attr_type CHECK expr

    PRIMARY     shift, and go to state 93
    IDENTIFIER  shift, and go to state 46

    primary_key  go to state 94
    definition   go to state 95


State 66

   47 list_value: STRING •

    $default  reduce using rule 47 (list_value)


State 67

   45 list_value: NUMBER •

    $default  reduce using rule 45 (list_value)


State 68

   46 list_value: FLOAT •

    $default  reduce using rule 46 (list_value)


State 69

   42 insert_stmt: INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values • CLOSE_PAR SEMICOLON
   44 list_values: list_values • COMMA list_value

    CLOSE_PAR  shift, and go to state 96
    COMMA      shift, and go to state 97


State 70

   43 list_values: list_value •

    $default  reduce using rule 43 (list_values)


State 71

   60 scond_b: OPEN_PAR sexpr • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 98


State 72

   54 scond_b: IDENTIFIER GE • diff_value
   61 diff_value: • IDENTIFIER
   62           | • diff_value_without_identifier
   63 diff_value_without_identifier: • STRING
   64                              | • NUMBER
   65                              | • FLOAT

    IDENTIFIER  shift, and go to state 99
    STRING      shift, and go to state 81
    NUMBER      shift, and go to state 82
    FLOAT       shift, and go to state 83

    diff_value                     go to state 100
    diff_value_without_identifier  go to state 101


State 73

   55 scond_b: IDENTIFIER GT • diff_value
   61 diff_value: • IDENTIFIER
   62           | • diff_value_without_identifier
   63 diff_value_without_identifier: • STRING
   64                              | • NUMBER
   65                              | • FLOAT

    IDENTIFIER  shift, and go to state 99
    STRING      shift, and go to state 81
    NUMBER      shift, and go to state 82
    FLOAT       shift, and go to state 83

    diff_value                     go to state 102
    diff_value_without_identifier  go to state 101


State 74

   58 scond_b: IDENTIFIER LE • diff_value
   61 diff_value: • IDENTIFIER
   62           | • diff_value_without_identifier
   63 diff_value_without_identifier: • STRING
   64                              | • NUMBER
   65                              | • FLOAT

    IDENTIFIER  shift, and go to state 99
    STRING      shift, and go to state 81
    NUMBER      shift, and go to state 82
    FLOAT       shift, and go to state 83

    diff_value                     go to state 103
    diff_value_without_identifier  go to state 101


State 75

   57 scond_b: IDENTIFIER LT • diff_value
   61 diff_value: • IDENTIFIER
   62           | • diff_value_without_identifier
   63 diff_value_without_identifier: • STRING
   64                              | • NUMBER
   65                              | • FLOAT

    IDENTIFIER  shift, and go to state 99
    STRING      shift, and go to state 81
    NUMBER      shift, and go to state 82
    FLOAT       shift, and go to state 83

    diff_value                     go to state 104
    diff_value_without_identifier  go to state 101


State 76

   59 scond_b: IDENTIFIER E • diff_value
   61 diff_value: • IDENTIFIER
   62           | • diff_value_without_identifier
   63 diff_value_without_identifier: • STRING
   64                              | • NUMBER
   65                              | • FLOAT

    IDENTIFIER  shift, and go to state 99
    STRING      shift, and go to state 81
    NUMBER      shift, and go to state 82
    FLOAT       shift, and go to state 83

    diff_value                     go to state 105
    diff_value_without_identifier  go to state 101


State 77

   56 scond_b: IDENTIFIER NE • diff_value
   61 diff_value: • IDENTIFIER
   62           | • diff_value_without_identifier
   63 diff_value_without_identifier: • STRING
   64                              | • NUMBER
   65                              | • FLOAT

    IDENTIFIER  shift, and go to state 99
    STRING      shift, and go to state 81
    NUMBER      shift, and go to state 82
    FLOAT       shift, and go to state 83

    diff_value                     go to state 106
    diff_value_without_identifier  go to state 101


State 78

   48 delete_stmt: DELETE FROM IDENTIFIER WHERE sexpr SEMICOLON •

    $default  reduce using rule 48 (delete_stmt)


State 79

   51 sor_expr: sor_expr OR • sand_expr
   52 sand_expr: • sand_expr AND scond_b
   53          | • scond_b
   54 scond_b: • IDENTIFIER GE diff_value
   55        | • IDENTIFIER GT diff_value
   56        | • IDENTIFIER NE diff_value
   57        | • IDENTIFIER LT diff_value
   58        | • IDENTIFIER LE diff_value
   59        | • IDENTIFIER E diff_value
   60        | • OPEN_PAR sexpr CLOSE_PAR

    OPEN_PAR    shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    sand_expr  go to state 107
    scond_b    go to state 55


State 80

   52 sand_expr: sand_expr AND • scond_b
   54 scond_b: • IDENTIFIER GE diff_value
   55        | • IDENTIFIER GT diff_value
   56        | • IDENTIFIER NE diff_value
   57        | • IDENTIFIER LT diff_value
   58        | • IDENTIFIER LE diff_value
   59        | • IDENTIFIER E diff_value
   60        | • OPEN_PAR sexpr CLOSE_PAR

    OPEN_PAR    shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    scond_b  go to state 108


State 81

   63 diff_value_without_identifier: STRING •

    $default  reduce using rule 63 (diff_value_without_identifier)


State 82

   64 diff_value_without_identifier: NUMBER •

    $default  reduce using rule 64 (diff_value_without_identifier)


State 83

   65 diff_value_without_identifier: FLOAT •

    $default  reduce using rule 65 (diff_value_without_identifier)


State 84

   69 update_value: IDENTIFIER E diff_value_without_identifier •

    $default  reduce using rule 69 (update_value)


State 85

   68 update_values: update_values COMMA update_value •

    $default  reduce using rule 68 (update_values)


State 86

   66 update_stmt: UPDATE IDENTIFIER SET update_values WHERE sexpr • SEMICOLON

    SEMICOLON  shift, and go to state 109


State 87

   72 table_list: table_list COMMA IDENTIFIER •

    $default  reduce using rule 72 (table_list)


State 88

   70 select_stmt: SELECT columns FROM table_list WHERE sexpr • SEMICOLON

    SEMICOLON  shift, and go to state 110


State 89

   23 attr_type: CHAR OPEN_PAR • NUMBER CLOSE_PAR

    NUMBER  shift, and go to state 111


State 90

   24 attr_type: INT OPEN_PAR • NUMBER CLOSE_PAR

    NUMBER  shift, and go to state 112


State 91

   25 attr_type: DECIMAL OPEN_PAR • NUMBER CLOSE_PAR

    NUMBER  shift, and go to state 113


State 92

   22 definition: IDENTIFIER attr_type CHECK • expr
   28 expr: • or_expr
   29 or_expr: • and_expr
   30        | • or_expr OR and_expr
   31 and_expr: • and_expr AND condition
   32         | • condition
   33 condition: • IDENTIFIER GE NUMBER
   34          | • IDENTIFIER GT NUMBER
   35          | • IDENTIFIER NE NUMBER
   36          | • IDENTIFIER LT NUMBER
   37          | • IDENTIFIER LE NUMBER
   38          | • IDENTIFIER E NUMBER
   39          | • OPEN_PAR expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 114
    IDENTIFIER  shift, and go to state 115

    expr       go to state 116
    or_expr    go to state 117
    and_expr   go to state 118
    condition  go to state 119


State 93

   12 primary_key: PRIMARY • KEY OPEN_PAR columns CLOSE_PAR

    KEY  shift, and go to state 120


State 94

   10 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key • COMMA foreign_keys CLOSE_PAR SEMICOLON
   11            | CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key • CLOSE_PAR SEMICOLON

    CLOSE_PAR  shift, and go to state 121
    COMMA      shift, and go to state 122


State 95

   20 definitions: definitions COMMA definition •

    $default  reduce using rule 20 (definitions)


State 96

   42 insert_stmt: INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR • SEMICOLON

    SEMICOLON  shift, and go to state 123


State 97

   44 list_values: list_values COMMA • list_value
   45 list_value: • NUMBER
   46           | • FLOAT
   47           | • STRING

    STRING  shift, and go to state 66
    NUMBER  shift, and go to state 67
    FLOAT   shift, and go to state 68

    list_value  go to state 124


State 98

   60 scond_b: OPEN_PAR sexpr CLOSE_PAR •

    $default  reduce using rule 60 (scond_b)


State 99

   61 diff_value: IDENTIFIER •

    $default  reduce using rule 61 (diff_value)


State 100

   54 scond_b: IDENTIFIER GE diff_value •

    $default  reduce using rule 54 (scond_b)


State 101

   62 diff_value: diff_value_without_identifier •

    $default  reduce using rule 62 (diff_value)


State 102

   55 scond_b: IDENTIFIER GT diff_value •

    $default  reduce using rule 55 (scond_b)


State 103

   58 scond_b: IDENTIFIER LE diff_value •

    $default  reduce using rule 58 (scond_b)


State 104

   57 scond_b: IDENTIFIER LT diff_value •

    $default  reduce using rule 57 (scond_b)


State 105

   59 scond_b: IDENTIFIER E diff_value •

    $default  reduce using rule 59 (scond_b)


State 106

   56 scond_b: IDENTIFIER NE diff_value •

    $default  reduce using rule 56 (scond_b)


State 107

   51 sor_expr: sor_expr OR sand_expr •  [CLOSE_PAR, SEMICOLON, OR]
   52 sand_expr: sand_expr • AND scond_b

    AND  shift, and go to state 80

    $default  reduce using rule 51 (sor_expr)


State 108

   52 sand_expr: sand_expr AND scond_b •

    $default  reduce using rule 52 (sand_expr)


State 109

   66 update_stmt: UPDATE IDENTIFIER SET update_values WHERE sexpr SEMICOLON •

    $default  reduce using rule 66 (update_stmt)


State 110

   70 select_stmt: SELECT columns FROM table_list WHERE sexpr SEMICOLON •

    $default  reduce using rule 70 (select_stmt)


State 111

   23 attr_type: CHAR OPEN_PAR NUMBER • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 125


State 112

   24 attr_type: INT OPEN_PAR NUMBER • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 126


State 113

   25 attr_type: DECIMAL OPEN_PAR NUMBER • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 127


State 114

   28 expr: • or_expr
   29 or_expr: • and_expr
   30        | • or_expr OR and_expr
   31 and_expr: • and_expr AND condition
   32         | • condition
   33 condition: • IDENTIFIER GE NUMBER
   34          | • IDENTIFIER GT NUMBER
   35          | • IDENTIFIER NE NUMBER
   36          | • IDENTIFIER LT NUMBER
   37          | • IDENTIFIER LE NUMBER
   38          | • IDENTIFIER E NUMBER
   39          | • OPEN_PAR expr CLOSE_PAR
   39          | OPEN_PAR • expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 114
    IDENTIFIER  shift, and go to state 115

    expr       go to state 128
    or_expr    go to state 117
    and_expr   go to state 118
    condition  go to state 119


State 115

   33 condition: IDENTIFIER • GE NUMBER
   34          | IDENTIFIER • GT NUMBER
   35          | IDENTIFIER • NE NUMBER
   36          | IDENTIFIER • LT NUMBER
   37          | IDENTIFIER • LE NUMBER
   38          | IDENTIFIER • E NUMBER

    GE  shift, and go to state 129
    GT  shift, and go to state 130
    LE  shift, and go to state 131
    LT  shift, and go to state 132
    E   shift, and go to state 133
    NE  shift, and go to state 134


State 116

   22 definition: IDENTIFIER attr_type CHECK expr •

    $default  reduce using rule 22 (definition)


State 117

   28 expr: or_expr •  [CLOSE_PAR, COMMA]
   30 or_expr: or_expr • OR and_expr

    OR  shift, and go to state 135

    $default  reduce using rule 28 (expr)


State 118

   29 or_expr: and_expr •  [CLOSE_PAR, COMMA, OR]
   31 and_expr: and_expr • AND condition

    AND  shift, and go to state 136

    $default  reduce using rule 29 (or_expr)


State 119

   32 and_expr: condition •

    $default  reduce using rule 32 (and_expr)


State 120

   12 primary_key: PRIMARY KEY • OPEN_PAR columns CLOSE_PAR

    OPEN_PAR  shift, and go to state 137


State 121

   11 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR • SEMICOLON

    SEMICOLON  shift, and go to state 138


State 122

   10 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA • foreign_keys CLOSE_PAR SEMICOLON
   13 foreign_keys: • foreign_key
   14             | • foreign_keys COMMA foreign_key
   15 foreign_key: • FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    FOREIGN  shift, and go to state 139

    foreign_keys  go to state 140
    foreign_key   go to state 141


State 123

   42 insert_stmt: INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON •

    $default  reduce using rule 42 (insert_stmt)


State 124

   44 list_values: list_values COMMA list_value •

    $default  reduce using rule 44 (list_values)


State 125

   23 attr_type: CHAR OPEN_PAR NUMBER CLOSE_PAR •

    $default  reduce using rule 23 (attr_type)


State 126

   24 attr_type: INT OPEN_PAR NUMBER CLOSE_PAR •

    $default  reduce using rule 24 (attr_type)


State 127

   25 attr_type: DECIMAL OPEN_PAR NUMBER CLOSE_PAR •

    $default  reduce using rule 25 (attr_type)


State 128

   39 condition: OPEN_PAR expr • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 142


State 129

   33 condition: IDENTIFIER GE • NUMBER

    NUMBER  shift, and go to state 143


State 130

   34 condition: IDENTIFIER GT • NUMBER

    NUMBER  shift, and go to state 144


State 131

   37 condition: IDENTIFIER LE • NUMBER

    NUMBER  shift, and go to state 145


State 132

   36 condition: IDENTIFIER LT • NUMBER

    NUMBER  shift, and go to state 146


State 133

   38 condition: IDENTIFIER E • NUMBER

    NUMBER  shift, and go to state 147


State 134

   35 condition: IDENTIFIER NE • NUMBER

    NUMBER  shift, and go to state 148


State 135

   30 or_expr: or_expr OR • and_expr
   31 and_expr: • and_expr AND condition
   32         | • condition
   33 condition: • IDENTIFIER GE NUMBER
   34          | • IDENTIFIER GT NUMBER
   35          | • IDENTIFIER NE NUMBER
   36          | • IDENTIFIER LT NUMBER
   37          | • IDENTIFIER LE NUMBER
   38          | • IDENTIFIER E NUMBER
   39          | • OPEN_PAR expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 114
    IDENTIFIER  shift, and go to state 115

    and_expr   go to state 149
    condition  go to state 119


State 136

   31 and_expr: and_expr AND • condition
   33 condition: • IDENTIFIER GE NUMBER
   34          | • IDENTIFIER GT NUMBER
   35          | • IDENTIFIER NE NUMBER
   36          | • IDENTIFIER LT NUMBER
   37          | • IDENTIFIER LE NUMBER
   38          | • IDENTIFIER E NUMBER
   39          | • OPEN_PAR expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 114
    IDENTIFIER  shift, and go to state 115

    condition  go to state 150


State 137

   12 primary_key: PRIMARY KEY OPEN_PAR • columns CLOSE_PAR
   16 columns: • column
   17        | • columns COMMA column
   18 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 23

    columns  go to state 151
    column   go to state 25


State 138

   11 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON •

    $default  reduce using rule 11 (create_stmt)


State 139

   15 foreign_key: FOREIGN • KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    KEY  shift, and go to state 152


State 140

   10 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys • CLOSE_PAR SEMICOLON
   14 foreign_keys: foreign_keys • COMMA foreign_key

    CLOSE_PAR  shift, and go to state 153
    COMMA      shift, and go to state 154


State 141

   13 foreign_keys: foreign_key •

    $default  reduce using rule 13 (foreign_keys)


State 142

   39 condition: OPEN_PAR expr CLOSE_PAR •

    $default  reduce using rule 39 (condition)


State 143

   33 condition: IDENTIFIER GE NUMBER •

    $default  reduce using rule 33 (condition)


State 144

   34 condition: IDENTIFIER GT NUMBER •

    $default  reduce using rule 34 (condition)


State 145

   37 condition: IDENTIFIER LE NUMBER •

    $default  reduce using rule 37 (condition)


State 146

   36 condition: IDENTIFIER LT NUMBER •

    $default  reduce using rule 36 (condition)


State 147

   38 condition: IDENTIFIER E NUMBER •

    $default  reduce using rule 38 (condition)


State 148

   35 condition: IDENTIFIER NE NUMBER •

    $default  reduce using rule 35 (condition)


State 149

   30 or_expr: or_expr OR and_expr •  [CLOSE_PAR, COMMA, OR]
   31 and_expr: and_expr • AND condition

    AND  shift, and go to state 136

    $default  reduce using rule 30 (or_expr)


State 150

   31 and_expr: and_expr AND condition •

    $default  reduce using rule 31 (and_expr)


State 151

   12 primary_key: PRIMARY KEY OPEN_PAR columns • CLOSE_PAR
   17 columns: columns • COMMA column

    CLOSE_PAR  shift, and go to state 155
    COMMA      shift, and go to state 34


State 152

   15 foreign_key: FOREIGN KEY • OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    OPEN_PAR  shift, and go to state 156


State 153

   10 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR • SEMICOLON

    SEMICOLON  shift, and go to state 157


State 154

   14 foreign_keys: foreign_keys COMMA • foreign_key
   15 foreign_key: • FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    FOREIGN  shift, and go to state 139

    foreign_key  go to state 158


State 155

   12 primary_key: PRIMARY KEY OPEN_PAR columns CLOSE_PAR •

    $default  reduce using rule 12 (primary_key)


State 156

   15 foreign_key: FOREIGN KEY OPEN_PAR • column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR
   18 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 23

    column  go to state 159


State 157

   10 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON •

    $default  reduce using rule 10 (create_stmt)


State 158

   14 foreign_keys: foreign_keys COMMA foreign_key •

    $default  reduce using rule 14 (foreign_keys)


State 159

   15 foreign_key: FOREIGN KEY OPEN_PAR column • CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    CLOSE_PAR  shift, and go to state 160


State 160

   15 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR • REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    REFERENCES  shift, and go to state 161


State 161

   15 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES • IDENTIFIER OPEN_PAR column CLOSE_PAR

    IDENTIFIER  shift, and go to state 162


State 162

   15 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER • OPEN_PAR column CLOSE_PAR

    OPEN_PAR  shift, and go to state 163


State 163

   15 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR • column CLOSE_PAR
   18 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 23

    column  go to state 164


State 164

   15 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 165


State 165

   15 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR •

    $default  reduce using rule 15 (foreign_key)
