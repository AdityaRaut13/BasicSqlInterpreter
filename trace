Grammar

    0 $accept: statements $end

    1 statements: statement
    2           | statements statement

    3 statement: create_stmt
    4          | describe_stmt
    5          | drop_stmt
    6          | insert_stmt
    7          | delete_stmt
    8          | update_stmt

    9 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   10            | CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

   11 primary_key: PRIMARY KEY OPEN_PAR columns CLOSE_PAR

   12 foreign_keys: foreign_key
   13             | foreign_keys COMMA foreign_key

   14 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

   15 columns: column
   16        | columns COMMA column

   17 column: IDENTIFIER

   18 definitions: definition
   19            | definitions COMMA definition

   20 definition: IDENTIFIER attr_type
   21           | IDENTIFIER attr_type CHECK expr

   22 attr_type: CHAR OPEN_PAR NUMBER CLOSE_PAR
   23          | INT OPEN_PAR NUMBER CLOSE_PAR
   24          | DECIMAL OPEN_PAR NUMBER CLOSE_PAR
   25          | INT
   26          | DECIMAL

   27 expr: or_expr

   28 or_expr: and_expr
   29        | or_expr OR and_expr

   30 and_expr: and_expr AND condition
   31         | condition

   32 condition: IDENTIFIER GE NUMBER
   33          | IDENTIFIER GT NUMBER
   34          | IDENTIFIER NE NUMBER
   35          | IDENTIFIER LT NUMBER
   36          | IDENTIFIER LE NUMBER
   37          | IDENTIFIER E NUMBER
   38          | OPEN_PAR expr CLOSE_PAR

   39 describe_stmt: DESCRIBE IDENTIFIER SEMICOLON

   40 drop_stmt: DROP TABLE IDENTIFIER SEMICOLON

   41 insert_stmt: INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON

   42 list_values: list_value
   43            | list_values COMMA list_value

   44 list_value: NUMBER
   45           | FLOAT
   46           | STRING

   47 delete_stmt: DELETE FROM IDENTIFIER WHERE sexpr SEMICOLON

   48 sexpr: sor_expr

   49 sor_expr: sand_expr
   50         | sor_expr OR sand_expr

   51 sand_expr: sand_expr AND scond_b
   52          | scond_b

   53 scond_b: IDENTIFIER GE diff_value
   54        | IDENTIFIER GT diff_value
   55        | IDENTIFIER NE diff_value
   56        | IDENTIFIER LT diff_value
   57        | IDENTIFIER LE diff_value
   58        | IDENTIFIER E diff_value
   59        | OPEN_PAR sexpr CLOSE_PAR

   60 diff_value: IDENTIFIER
   61           | diff_value_without_identifier

   62 diff_value_without_identifier: STRING
   63                              | NUMBER
   64                              | FLOAT

   65 update_stmt: UPDATE IDENTIFIER SET update_values WHERE sexpr SEMICOLON

   66 update_values: update_value
   67              | update_values COMMA update_value

   68 update_value: IDENTIFIER E diff_value_without_identifier


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CREATE (258) 9 10
    TABLE (259) 9 10 40
    CHECK (260) 21
    PRIMARY (261) 11
    KEY (262) 11 14
    FOREIGN (263) 14
    REFERENCES (264) 14
    CHAR (265) 22
    INT (266) 23 25
    DECIMAL (267) 24 26
    OPEN_PAR (268) 9 10 11 14 22 23 24 38 41 59
    CLOSE_PAR (269) 9 10 11 14 22 23 24 38 41 59
    SEMICOLON (270) 9 10 39 40 41 47 65
    COMMA (271) 9 10 13 16 19 43 67
    OR (272) 29 50
    AND (273) 30 51
    GE (274) 32 53
    GT (275) 33 54
    LE (276) 36 57
    LT (277) 35 56
    E (278) 37 58 68
    NE (279) 34 55
    DESCRIBE (280) 39
    DROP (281) 40
    INSERT (282) 41
    INTO (283) 41
    VALUES (284) 41
    DELETE (285) 47
    FROM (286) 47
    WHERE (287) 47 65
    UPDATE (288) 65
    SET (289) 65
    IDENTIFIER <string> (290) 9 10 14 17 20 21 32 33 34 35 36 37 39 40 41 47 53 54 55 56 57 58 60 65 68
    STRING <string> (291) 46 62
    NUMBER <ival> (292) 22 23 24 32 33 34 35 36 37 44 63
    FLOAT <fval> (293) 45 64


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    statements (40)
        on left: 1 2
        on right: 0 2
    statement (41)
        on left: 3 4 5 6 7 8
        on right: 1 2
    create_stmt (42)
        on left: 9 10
        on right: 3
    primary_key <string_array> (43)
        on left: 11
        on right: 9 10
    foreign_keys <refer_list> (44)
        on left: 12 13
        on right: 9 13
    foreign_key <refer> (45)
        on left: 14
        on right: 12 13
    columns <string_array> (46)
        on left: 15 16
        on right: 11 16
    column <string> (47)
        on left: 17
        on right: 14 15 16
    definitions <cols> (48)
        on left: 18 19
        on right: 9 10 19
    definition <column> (49)
        on left: 20 21
        on right: 18 19
    attr_type <column> (50)
        on left: 22 23 24 25 26
        on right: 20 21
    expr <condition> (51)
        on left: 27
        on right: 21 38
    or_expr <condition> (52)
        on left: 28 29
        on right: 27 29
    and_expr <condition> (53)
        on left: 30 31
        on right: 28 29 30
    condition <condition> (54)
        on left: 32 33 34 35 36 37 38
        on right: 30 31
    describe_stmt (55)
        on left: 39
        on right: 4
    drop_stmt (56)
        on left: 40
        on right: 5
    insert_stmt (57)
        on left: 41
        on right: 6
    list_values <literals_list> (58)
        on left: 42 43
        on right: 41 43
    list_value <literal> (59)
        on left: 44 45 46
        on right: 42 43
    delete_stmt (60)
        on left: 47
        on right: 7
    sexpr <scond> (61)
        on left: 48
        on right: 47 59 65
    sor_expr <scond> (62)
        on left: 49 50
        on right: 48 50
    sand_expr <scond> (63)
        on left: 51 52
        on right: 49 50 51
    scond_b <scond> (64)
        on left: 53 54 55 56 57 58 59
        on right: 51 52
    diff_value <literal> (65)
        on left: 60 61
        on right: 53 54 55 56 57 58
    diff_value_without_identifier <literal> (66)
        on left: 62 63 64
        on right: 61 68
    update_stmt (67)
        on left: 65
        on right: 8
    update_values <list_sets> (68)
        on left: 66 67
        on right: 65 67
    update_value <update_set_val> (69)
        on left: 68
        on right: 66 67


State 0

    0 $accept: • statements $end
    1 statements: • statement
    2           | • statements statement
    3 statement: • create_stmt
    4          | • describe_stmt
    5          | • drop_stmt
    6          | • insert_stmt
    7          | • delete_stmt
    8          | • update_stmt
    9 create_stmt: • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   10            | • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON
   39 describe_stmt: • DESCRIBE IDENTIFIER SEMICOLON
   40 drop_stmt: • DROP TABLE IDENTIFIER SEMICOLON
   41 insert_stmt: • INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON
   47 delete_stmt: • DELETE FROM IDENTIFIER WHERE sexpr SEMICOLON
   65 update_stmt: • UPDATE IDENTIFIER SET update_values WHERE sexpr SEMICOLON

    CREATE    shift, and go to state 1
    DESCRIBE  shift, and go to state 2
    DROP      shift, and go to state 3
    INSERT    shift, and go to state 4
    DELETE    shift, and go to state 5
    UPDATE    shift, and go to state 6

    statements     go to state 7
    statement      go to state 8
    create_stmt    go to state 9
    describe_stmt  go to state 10
    drop_stmt      go to state 11
    insert_stmt    go to state 12
    delete_stmt    go to state 13
    update_stmt    go to state 14


State 1

    9 create_stmt: CREATE • TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   10            | CREATE • TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

    TABLE  shift, and go to state 15


State 2

   39 describe_stmt: DESCRIBE • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 16


State 3

   40 drop_stmt: DROP • TABLE IDENTIFIER SEMICOLON

    TABLE  shift, and go to state 17


State 4

   41 insert_stmt: INSERT • INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON

    INTO  shift, and go to state 18


State 5

   47 delete_stmt: DELETE • FROM IDENTIFIER WHERE sexpr SEMICOLON

    FROM  shift, and go to state 19


State 6

   65 update_stmt: UPDATE • IDENTIFIER SET update_values WHERE sexpr SEMICOLON

    IDENTIFIER  shift, and go to state 20


State 7

    0 $accept: statements • $end
    2 statements: statements • statement
    3 statement: • create_stmt
    4          | • describe_stmt
    5          | • drop_stmt
    6          | • insert_stmt
    7          | • delete_stmt
    8          | • update_stmt
    9 create_stmt: • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   10            | • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON
   39 describe_stmt: • DESCRIBE IDENTIFIER SEMICOLON
   40 drop_stmt: • DROP TABLE IDENTIFIER SEMICOLON
   41 insert_stmt: • INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON
   47 delete_stmt: • DELETE FROM IDENTIFIER WHERE sexpr SEMICOLON
   65 update_stmt: • UPDATE IDENTIFIER SET update_values WHERE sexpr SEMICOLON

    $end      shift, and go to state 21
    CREATE    shift, and go to state 1
    DESCRIBE  shift, and go to state 2
    DROP      shift, and go to state 3
    INSERT    shift, and go to state 4
    DELETE    shift, and go to state 5
    UPDATE    shift, and go to state 6

    statement      go to state 22
    create_stmt    go to state 9
    describe_stmt  go to state 10
    drop_stmt      go to state 11
    insert_stmt    go to state 12
    delete_stmt    go to state 13
    update_stmt    go to state 14


State 8

    1 statements: statement •

    $default  reduce using rule 1 (statements)


State 9

    3 statement: create_stmt •

    $default  reduce using rule 3 (statement)


State 10

    4 statement: describe_stmt •

    $default  reduce using rule 4 (statement)


State 11

    5 statement: drop_stmt •

    $default  reduce using rule 5 (statement)


State 12

    6 statement: insert_stmt •

    $default  reduce using rule 6 (statement)


State 13

    7 statement: delete_stmt •

    $default  reduce using rule 7 (statement)


State 14

    8 statement: update_stmt •

    $default  reduce using rule 8 (statement)


State 15

    9 create_stmt: CREATE TABLE • IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   10            | CREATE TABLE • IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

    IDENTIFIER  shift, and go to state 23


State 16

   39 describe_stmt: DESCRIBE IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 24


State 17

   40 drop_stmt: DROP TABLE • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 25


State 18

   41 insert_stmt: INSERT INTO • IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON

    IDENTIFIER  shift, and go to state 26


State 19

   47 delete_stmt: DELETE FROM • IDENTIFIER WHERE sexpr SEMICOLON

    IDENTIFIER  shift, and go to state 27


State 20

   65 update_stmt: UPDATE IDENTIFIER • SET update_values WHERE sexpr SEMICOLON

    SET  shift, and go to state 28


State 21

    0 $accept: statements $end •

    $default  accept


State 22

    2 statements: statements statement •

    $default  reduce using rule 2 (statements)


State 23

    9 create_stmt: CREATE TABLE IDENTIFIER • OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   10            | CREATE TABLE IDENTIFIER • OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

    OPEN_PAR  shift, and go to state 29


State 24

   39 describe_stmt: DESCRIBE IDENTIFIER SEMICOLON •

    $default  reduce using rule 39 (describe_stmt)


State 25

   40 drop_stmt: DROP TABLE IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 30


State 26

   41 insert_stmt: INSERT INTO IDENTIFIER • VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON

    VALUES  shift, and go to state 31


State 27

   47 delete_stmt: DELETE FROM IDENTIFIER • WHERE sexpr SEMICOLON

    WHERE  shift, and go to state 32


State 28

   65 update_stmt: UPDATE IDENTIFIER SET • update_values WHERE sexpr SEMICOLON
   66 update_values: • update_value
   67              | • update_values COMMA update_value
   68 update_value: • IDENTIFIER E diff_value_without_identifier

    IDENTIFIER  shift, and go to state 33

    update_values  go to state 34
    update_value   go to state 35


State 29

    9 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR • definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   10            | CREATE TABLE IDENTIFIER OPEN_PAR • definitions COMMA primary_key CLOSE_PAR SEMICOLON
   18 definitions: • definition
   19            | • definitions COMMA definition
   20 definition: • IDENTIFIER attr_type
   21           | • IDENTIFIER attr_type CHECK expr

    IDENTIFIER  shift, and go to state 36

    definitions  go to state 37
    definition   go to state 38


State 30

   40 drop_stmt: DROP TABLE IDENTIFIER SEMICOLON •

    $default  reduce using rule 40 (drop_stmt)


State 31

   41 insert_stmt: INSERT INTO IDENTIFIER VALUES • OPEN_PAR list_values CLOSE_PAR SEMICOLON

    OPEN_PAR  shift, and go to state 39


State 32

   47 delete_stmt: DELETE FROM IDENTIFIER WHERE • sexpr SEMICOLON
   48 sexpr: • sor_expr
   49 sor_expr: • sand_expr
   50         | • sor_expr OR sand_expr
   51 sand_expr: • sand_expr AND scond_b
   52          | • scond_b
   53 scond_b: • IDENTIFIER GE diff_value
   54        | • IDENTIFIER GT diff_value
   55        | • IDENTIFIER NE diff_value
   56        | • IDENTIFIER LT diff_value
   57        | • IDENTIFIER LE diff_value
   58        | • IDENTIFIER E diff_value
   59        | • OPEN_PAR sexpr CLOSE_PAR

    OPEN_PAR    shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    sexpr      go to state 42
    sor_expr   go to state 43
    sand_expr  go to state 44
    scond_b    go to state 45


State 33

   68 update_value: IDENTIFIER • E diff_value_without_identifier

    E  shift, and go to state 46


State 34

   65 update_stmt: UPDATE IDENTIFIER SET update_values • WHERE sexpr SEMICOLON
   67 update_values: update_values • COMMA update_value

    COMMA  shift, and go to state 47
    WHERE  shift, and go to state 48


State 35

   66 update_values: update_value •

    $default  reduce using rule 66 (update_values)


State 36

   20 definition: IDENTIFIER • attr_type
   21           | IDENTIFIER • attr_type CHECK expr
   22 attr_type: • CHAR OPEN_PAR NUMBER CLOSE_PAR
   23          | • INT OPEN_PAR NUMBER CLOSE_PAR
   24          | • DECIMAL OPEN_PAR NUMBER CLOSE_PAR
   25          | • INT
   26          | • DECIMAL

    CHAR     shift, and go to state 49
    INT      shift, and go to state 50
    DECIMAL  shift, and go to state 51

    attr_type  go to state 52


State 37

    9 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions • COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   10            | CREATE TABLE IDENTIFIER OPEN_PAR definitions • COMMA primary_key CLOSE_PAR SEMICOLON
   19 definitions: definitions • COMMA definition

    COMMA  shift, and go to state 53


State 38

   18 definitions: definition •

    $default  reduce using rule 18 (definitions)


State 39

   41 insert_stmt: INSERT INTO IDENTIFIER VALUES OPEN_PAR • list_values CLOSE_PAR SEMICOLON
   42 list_values: • list_value
   43            | • list_values COMMA list_value
   44 list_value: • NUMBER
   45           | • FLOAT
   46           | • STRING

    STRING  shift, and go to state 54
    NUMBER  shift, and go to state 55
    FLOAT   shift, and go to state 56

    list_values  go to state 57
    list_value   go to state 58


State 40

   48 sexpr: • sor_expr
   49 sor_expr: • sand_expr
   50         | • sor_expr OR sand_expr
   51 sand_expr: • sand_expr AND scond_b
   52          | • scond_b
   53 scond_b: • IDENTIFIER GE diff_value
   54        | • IDENTIFIER GT diff_value
   55        | • IDENTIFIER NE diff_value
   56        | • IDENTIFIER LT diff_value
   57        | • IDENTIFIER LE diff_value
   58        | • IDENTIFIER E diff_value
   59        | • OPEN_PAR sexpr CLOSE_PAR
   59        | OPEN_PAR • sexpr CLOSE_PAR

    OPEN_PAR    shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    sexpr      go to state 59
    sor_expr   go to state 43
    sand_expr  go to state 44
    scond_b    go to state 45


State 41

   53 scond_b: IDENTIFIER • GE diff_value
   54        | IDENTIFIER • GT diff_value
   55        | IDENTIFIER • NE diff_value
   56        | IDENTIFIER • LT diff_value
   57        | IDENTIFIER • LE diff_value
   58        | IDENTIFIER • E diff_value

    GE  shift, and go to state 60
    GT  shift, and go to state 61
    LE  shift, and go to state 62
    LT  shift, and go to state 63
    E   shift, and go to state 64
    NE  shift, and go to state 65


State 42

   47 delete_stmt: DELETE FROM IDENTIFIER WHERE sexpr • SEMICOLON

    SEMICOLON  shift, and go to state 66


State 43

   48 sexpr: sor_expr •  [CLOSE_PAR, SEMICOLON]
   50 sor_expr: sor_expr • OR sand_expr

    OR  shift, and go to state 67

    $default  reduce using rule 48 (sexpr)


State 44

   49 sor_expr: sand_expr •  [CLOSE_PAR, SEMICOLON, OR]
   51 sand_expr: sand_expr • AND scond_b

    AND  shift, and go to state 68

    $default  reduce using rule 49 (sor_expr)


State 45

   52 sand_expr: scond_b •

    $default  reduce using rule 52 (sand_expr)


State 46

   62 diff_value_without_identifier: • STRING
   63                              | • NUMBER
   64                              | • FLOAT
   68 update_value: IDENTIFIER E • diff_value_without_identifier

    STRING  shift, and go to state 69
    NUMBER  shift, and go to state 70
    FLOAT   shift, and go to state 71

    diff_value_without_identifier  go to state 72


State 47

   67 update_values: update_values COMMA • update_value
   68 update_value: • IDENTIFIER E diff_value_without_identifier

    IDENTIFIER  shift, and go to state 33

    update_value  go to state 73


State 48

   48 sexpr: • sor_expr
   49 sor_expr: • sand_expr
   50         | • sor_expr OR sand_expr
   51 sand_expr: • sand_expr AND scond_b
   52          | • scond_b
   53 scond_b: • IDENTIFIER GE diff_value
   54        | • IDENTIFIER GT diff_value
   55        | • IDENTIFIER NE diff_value
   56        | • IDENTIFIER LT diff_value
   57        | • IDENTIFIER LE diff_value
   58        | • IDENTIFIER E diff_value
   59        | • OPEN_PAR sexpr CLOSE_PAR
   65 update_stmt: UPDATE IDENTIFIER SET update_values WHERE • sexpr SEMICOLON

    OPEN_PAR    shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    sexpr      go to state 74
    sor_expr   go to state 43
    sand_expr  go to state 44
    scond_b    go to state 45


State 49

   22 attr_type: CHAR • OPEN_PAR NUMBER CLOSE_PAR

    OPEN_PAR  shift, and go to state 75


State 50

   23 attr_type: INT • OPEN_PAR NUMBER CLOSE_PAR
   25          | INT •  [CHECK, COMMA]

    OPEN_PAR  shift, and go to state 76

    $default  reduce using rule 25 (attr_type)


State 51

   24 attr_type: DECIMAL • OPEN_PAR NUMBER CLOSE_PAR
   26          | DECIMAL •  [CHECK, COMMA]

    OPEN_PAR  shift, and go to state 77

    $default  reduce using rule 26 (attr_type)


State 52

   20 definition: IDENTIFIER attr_type •  [COMMA]
   21           | IDENTIFIER attr_type • CHECK expr

    CHECK  shift, and go to state 78

    $default  reduce using rule 20 (definition)


State 53

    9 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA • primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   10            | CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA • primary_key CLOSE_PAR SEMICOLON
   11 primary_key: • PRIMARY KEY OPEN_PAR columns CLOSE_PAR
   19 definitions: definitions COMMA • definition
   20 definition: • IDENTIFIER attr_type
   21           | • IDENTIFIER attr_type CHECK expr

    PRIMARY     shift, and go to state 79
    IDENTIFIER  shift, and go to state 36

    primary_key  go to state 80
    definition   go to state 81


State 54

   46 list_value: STRING •

    $default  reduce using rule 46 (list_value)


State 55

   44 list_value: NUMBER •

    $default  reduce using rule 44 (list_value)


State 56

   45 list_value: FLOAT •

    $default  reduce using rule 45 (list_value)


State 57

   41 insert_stmt: INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values • CLOSE_PAR SEMICOLON
   43 list_values: list_values • COMMA list_value

    CLOSE_PAR  shift, and go to state 82
    COMMA      shift, and go to state 83


State 58

   42 list_values: list_value •

    $default  reduce using rule 42 (list_values)


State 59

   59 scond_b: OPEN_PAR sexpr • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 84


State 60

   53 scond_b: IDENTIFIER GE • diff_value
   60 diff_value: • IDENTIFIER
   61           | • diff_value_without_identifier
   62 diff_value_without_identifier: • STRING
   63                              | • NUMBER
   64                              | • FLOAT

    IDENTIFIER  shift, and go to state 85
    STRING      shift, and go to state 69
    NUMBER      shift, and go to state 70
    FLOAT       shift, and go to state 71

    diff_value                     go to state 86
    diff_value_without_identifier  go to state 87


State 61

   54 scond_b: IDENTIFIER GT • diff_value
   60 diff_value: • IDENTIFIER
   61           | • diff_value_without_identifier
   62 diff_value_without_identifier: • STRING
   63                              | • NUMBER
   64                              | • FLOAT

    IDENTIFIER  shift, and go to state 85
    STRING      shift, and go to state 69
    NUMBER      shift, and go to state 70
    FLOAT       shift, and go to state 71

    diff_value                     go to state 88
    diff_value_without_identifier  go to state 87


State 62

   57 scond_b: IDENTIFIER LE • diff_value
   60 diff_value: • IDENTIFIER
   61           | • diff_value_without_identifier
   62 diff_value_without_identifier: • STRING
   63                              | • NUMBER
   64                              | • FLOAT

    IDENTIFIER  shift, and go to state 85
    STRING      shift, and go to state 69
    NUMBER      shift, and go to state 70
    FLOAT       shift, and go to state 71

    diff_value                     go to state 89
    diff_value_without_identifier  go to state 87


State 63

   56 scond_b: IDENTIFIER LT • diff_value
   60 diff_value: • IDENTIFIER
   61           | • diff_value_without_identifier
   62 diff_value_without_identifier: • STRING
   63                              | • NUMBER
   64                              | • FLOAT

    IDENTIFIER  shift, and go to state 85
    STRING      shift, and go to state 69
    NUMBER      shift, and go to state 70
    FLOAT       shift, and go to state 71

    diff_value                     go to state 90
    diff_value_without_identifier  go to state 87


State 64

   58 scond_b: IDENTIFIER E • diff_value
   60 diff_value: • IDENTIFIER
   61           | • diff_value_without_identifier
   62 diff_value_without_identifier: • STRING
   63                              | • NUMBER
   64                              | • FLOAT

    IDENTIFIER  shift, and go to state 85
    STRING      shift, and go to state 69
    NUMBER      shift, and go to state 70
    FLOAT       shift, and go to state 71

    diff_value                     go to state 91
    diff_value_without_identifier  go to state 87


State 65

   55 scond_b: IDENTIFIER NE • diff_value
   60 diff_value: • IDENTIFIER
   61           | • diff_value_without_identifier
   62 diff_value_without_identifier: • STRING
   63                              | • NUMBER
   64                              | • FLOAT

    IDENTIFIER  shift, and go to state 85
    STRING      shift, and go to state 69
    NUMBER      shift, and go to state 70
    FLOAT       shift, and go to state 71

    diff_value                     go to state 92
    diff_value_without_identifier  go to state 87


State 66

   47 delete_stmt: DELETE FROM IDENTIFIER WHERE sexpr SEMICOLON •

    $default  reduce using rule 47 (delete_stmt)


State 67

   50 sor_expr: sor_expr OR • sand_expr
   51 sand_expr: • sand_expr AND scond_b
   52          | • scond_b
   53 scond_b: • IDENTIFIER GE diff_value
   54        | • IDENTIFIER GT diff_value
   55        | • IDENTIFIER NE diff_value
   56        | • IDENTIFIER LT diff_value
   57        | • IDENTIFIER LE diff_value
   58        | • IDENTIFIER E diff_value
   59        | • OPEN_PAR sexpr CLOSE_PAR

    OPEN_PAR    shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    sand_expr  go to state 93
    scond_b    go to state 45


State 68

   51 sand_expr: sand_expr AND • scond_b
   53 scond_b: • IDENTIFIER GE diff_value
   54        | • IDENTIFIER GT diff_value
   55        | • IDENTIFIER NE diff_value
   56        | • IDENTIFIER LT diff_value
   57        | • IDENTIFIER LE diff_value
   58        | • IDENTIFIER E diff_value
   59        | • OPEN_PAR sexpr CLOSE_PAR

    OPEN_PAR    shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    scond_b  go to state 94


State 69

   62 diff_value_without_identifier: STRING •

    $default  reduce using rule 62 (diff_value_without_identifier)


State 70

   63 diff_value_without_identifier: NUMBER •

    $default  reduce using rule 63 (diff_value_without_identifier)


State 71

   64 diff_value_without_identifier: FLOAT •

    $default  reduce using rule 64 (diff_value_without_identifier)


State 72

   68 update_value: IDENTIFIER E diff_value_without_identifier •

    $default  reduce using rule 68 (update_value)


State 73

   67 update_values: update_values COMMA update_value •

    $default  reduce using rule 67 (update_values)


State 74

   65 update_stmt: UPDATE IDENTIFIER SET update_values WHERE sexpr • SEMICOLON

    SEMICOLON  shift, and go to state 95


State 75

   22 attr_type: CHAR OPEN_PAR • NUMBER CLOSE_PAR

    NUMBER  shift, and go to state 96


State 76

   23 attr_type: INT OPEN_PAR • NUMBER CLOSE_PAR

    NUMBER  shift, and go to state 97


State 77

   24 attr_type: DECIMAL OPEN_PAR • NUMBER CLOSE_PAR

    NUMBER  shift, and go to state 98


State 78

   21 definition: IDENTIFIER attr_type CHECK • expr
   27 expr: • or_expr
   28 or_expr: • and_expr
   29        | • or_expr OR and_expr
   30 and_expr: • and_expr AND condition
   31         | • condition
   32 condition: • IDENTIFIER GE NUMBER
   33          | • IDENTIFIER GT NUMBER
   34          | • IDENTIFIER NE NUMBER
   35          | • IDENTIFIER LT NUMBER
   36          | • IDENTIFIER LE NUMBER
   37          | • IDENTIFIER E NUMBER
   38          | • OPEN_PAR expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 99
    IDENTIFIER  shift, and go to state 100

    expr       go to state 101
    or_expr    go to state 102
    and_expr   go to state 103
    condition  go to state 104


State 79

   11 primary_key: PRIMARY • KEY OPEN_PAR columns CLOSE_PAR

    KEY  shift, and go to state 105


State 80

    9 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key • COMMA foreign_keys CLOSE_PAR SEMICOLON
   10            | CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key • CLOSE_PAR SEMICOLON

    CLOSE_PAR  shift, and go to state 106
    COMMA      shift, and go to state 107


State 81

   19 definitions: definitions COMMA definition •

    $default  reduce using rule 19 (definitions)


State 82

   41 insert_stmt: INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR • SEMICOLON

    SEMICOLON  shift, and go to state 108


State 83

   43 list_values: list_values COMMA • list_value
   44 list_value: • NUMBER
   45           | • FLOAT
   46           | • STRING

    STRING  shift, and go to state 54
    NUMBER  shift, and go to state 55
    FLOAT   shift, and go to state 56

    list_value  go to state 109


State 84

   59 scond_b: OPEN_PAR sexpr CLOSE_PAR •

    $default  reduce using rule 59 (scond_b)


State 85

   60 diff_value: IDENTIFIER •

    $default  reduce using rule 60 (diff_value)


State 86

   53 scond_b: IDENTIFIER GE diff_value •

    $default  reduce using rule 53 (scond_b)


State 87

   61 diff_value: diff_value_without_identifier •

    $default  reduce using rule 61 (diff_value)


State 88

   54 scond_b: IDENTIFIER GT diff_value •

    $default  reduce using rule 54 (scond_b)


State 89

   57 scond_b: IDENTIFIER LE diff_value •

    $default  reduce using rule 57 (scond_b)


State 90

   56 scond_b: IDENTIFIER LT diff_value •

    $default  reduce using rule 56 (scond_b)


State 91

   58 scond_b: IDENTIFIER E diff_value •

    $default  reduce using rule 58 (scond_b)


State 92

   55 scond_b: IDENTIFIER NE diff_value •

    $default  reduce using rule 55 (scond_b)


State 93

   50 sor_expr: sor_expr OR sand_expr •  [CLOSE_PAR, SEMICOLON, OR]
   51 sand_expr: sand_expr • AND scond_b

    AND  shift, and go to state 68

    $default  reduce using rule 50 (sor_expr)


State 94

   51 sand_expr: sand_expr AND scond_b •

    $default  reduce using rule 51 (sand_expr)


State 95

   65 update_stmt: UPDATE IDENTIFIER SET update_values WHERE sexpr SEMICOLON •

    $default  reduce using rule 65 (update_stmt)


State 96

   22 attr_type: CHAR OPEN_PAR NUMBER • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 110


State 97

   23 attr_type: INT OPEN_PAR NUMBER • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 111


State 98

   24 attr_type: DECIMAL OPEN_PAR NUMBER • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 112


State 99

   27 expr: • or_expr
   28 or_expr: • and_expr
   29        | • or_expr OR and_expr
   30 and_expr: • and_expr AND condition
   31         | • condition
   32 condition: • IDENTIFIER GE NUMBER
   33          | • IDENTIFIER GT NUMBER
   34          | • IDENTIFIER NE NUMBER
   35          | • IDENTIFIER LT NUMBER
   36          | • IDENTIFIER LE NUMBER
   37          | • IDENTIFIER E NUMBER
   38          | • OPEN_PAR expr CLOSE_PAR
   38          | OPEN_PAR • expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 99
    IDENTIFIER  shift, and go to state 100

    expr       go to state 113
    or_expr    go to state 102
    and_expr   go to state 103
    condition  go to state 104


State 100

   32 condition: IDENTIFIER • GE NUMBER
   33          | IDENTIFIER • GT NUMBER
   34          | IDENTIFIER • NE NUMBER
   35          | IDENTIFIER • LT NUMBER
   36          | IDENTIFIER • LE NUMBER
   37          | IDENTIFIER • E NUMBER

    GE  shift, and go to state 114
    GT  shift, and go to state 115
    LE  shift, and go to state 116
    LT  shift, and go to state 117
    E   shift, and go to state 118
    NE  shift, and go to state 119


State 101

   21 definition: IDENTIFIER attr_type CHECK expr •

    $default  reduce using rule 21 (definition)


State 102

   27 expr: or_expr •  [CLOSE_PAR, COMMA]
   29 or_expr: or_expr • OR and_expr

    OR  shift, and go to state 120

    $default  reduce using rule 27 (expr)


State 103

   28 or_expr: and_expr •  [CLOSE_PAR, COMMA, OR]
   30 and_expr: and_expr • AND condition

    AND  shift, and go to state 121

    $default  reduce using rule 28 (or_expr)


State 104

   31 and_expr: condition •

    $default  reduce using rule 31 (and_expr)


State 105

   11 primary_key: PRIMARY KEY • OPEN_PAR columns CLOSE_PAR

    OPEN_PAR  shift, and go to state 122


State 106

   10 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR • SEMICOLON

    SEMICOLON  shift, and go to state 123


State 107

    9 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA • foreign_keys CLOSE_PAR SEMICOLON
   12 foreign_keys: • foreign_key
   13             | • foreign_keys COMMA foreign_key
   14 foreign_key: • FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    FOREIGN  shift, and go to state 124

    foreign_keys  go to state 125
    foreign_key   go to state 126


State 108

   41 insert_stmt: INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON •

    $default  reduce using rule 41 (insert_stmt)


State 109

   43 list_values: list_values COMMA list_value •

    $default  reduce using rule 43 (list_values)


State 110

   22 attr_type: CHAR OPEN_PAR NUMBER CLOSE_PAR •

    $default  reduce using rule 22 (attr_type)


State 111

   23 attr_type: INT OPEN_PAR NUMBER CLOSE_PAR •

    $default  reduce using rule 23 (attr_type)


State 112

   24 attr_type: DECIMAL OPEN_PAR NUMBER CLOSE_PAR •

    $default  reduce using rule 24 (attr_type)


State 113

   38 condition: OPEN_PAR expr • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 127


State 114

   32 condition: IDENTIFIER GE • NUMBER

    NUMBER  shift, and go to state 128


State 115

   33 condition: IDENTIFIER GT • NUMBER

    NUMBER  shift, and go to state 129


State 116

   36 condition: IDENTIFIER LE • NUMBER

    NUMBER  shift, and go to state 130


State 117

   35 condition: IDENTIFIER LT • NUMBER

    NUMBER  shift, and go to state 131


State 118

   37 condition: IDENTIFIER E • NUMBER

    NUMBER  shift, and go to state 132


State 119

   34 condition: IDENTIFIER NE • NUMBER

    NUMBER  shift, and go to state 133


State 120

   29 or_expr: or_expr OR • and_expr
   30 and_expr: • and_expr AND condition
   31         | • condition
   32 condition: • IDENTIFIER GE NUMBER
   33          | • IDENTIFIER GT NUMBER
   34          | • IDENTIFIER NE NUMBER
   35          | • IDENTIFIER LT NUMBER
   36          | • IDENTIFIER LE NUMBER
   37          | • IDENTIFIER E NUMBER
   38          | • OPEN_PAR expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 99
    IDENTIFIER  shift, and go to state 100

    and_expr   go to state 134
    condition  go to state 104


State 121

   30 and_expr: and_expr AND • condition
   32 condition: • IDENTIFIER GE NUMBER
   33          | • IDENTIFIER GT NUMBER
   34          | • IDENTIFIER NE NUMBER
   35          | • IDENTIFIER LT NUMBER
   36          | • IDENTIFIER LE NUMBER
   37          | • IDENTIFIER E NUMBER
   38          | • OPEN_PAR expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 99
    IDENTIFIER  shift, and go to state 100

    condition  go to state 135


State 122

   11 primary_key: PRIMARY KEY OPEN_PAR • columns CLOSE_PAR
   15 columns: • column
   16        | • columns COMMA column
   17 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 136

    columns  go to state 137
    column   go to state 138


State 123

   10 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON •

    $default  reduce using rule 10 (create_stmt)


State 124

   14 foreign_key: FOREIGN • KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    KEY  shift, and go to state 139


State 125

    9 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys • CLOSE_PAR SEMICOLON
   13 foreign_keys: foreign_keys • COMMA foreign_key

    CLOSE_PAR  shift, and go to state 140
    COMMA      shift, and go to state 141


State 126

   12 foreign_keys: foreign_key •

    $default  reduce using rule 12 (foreign_keys)


State 127

   38 condition: OPEN_PAR expr CLOSE_PAR •

    $default  reduce using rule 38 (condition)


State 128

   32 condition: IDENTIFIER GE NUMBER •

    $default  reduce using rule 32 (condition)


State 129

   33 condition: IDENTIFIER GT NUMBER •

    $default  reduce using rule 33 (condition)


State 130

   36 condition: IDENTIFIER LE NUMBER •

    $default  reduce using rule 36 (condition)


State 131

   35 condition: IDENTIFIER LT NUMBER •

    $default  reduce using rule 35 (condition)


State 132

   37 condition: IDENTIFIER E NUMBER •

    $default  reduce using rule 37 (condition)


State 133

   34 condition: IDENTIFIER NE NUMBER •

    $default  reduce using rule 34 (condition)


State 134

   29 or_expr: or_expr OR and_expr •  [CLOSE_PAR, COMMA, OR]
   30 and_expr: and_expr • AND condition

    AND  shift, and go to state 121

    $default  reduce using rule 29 (or_expr)


State 135

   30 and_expr: and_expr AND condition •

    $default  reduce using rule 30 (and_expr)


State 136

   17 column: IDENTIFIER •

    $default  reduce using rule 17 (column)


State 137

   11 primary_key: PRIMARY KEY OPEN_PAR columns • CLOSE_PAR
   16 columns: columns • COMMA column

    CLOSE_PAR  shift, and go to state 142
    COMMA      shift, and go to state 143


State 138

   15 columns: column •

    $default  reduce using rule 15 (columns)


State 139

   14 foreign_key: FOREIGN KEY • OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    OPEN_PAR  shift, and go to state 144


State 140

    9 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR • SEMICOLON

    SEMICOLON  shift, and go to state 145


State 141

   13 foreign_keys: foreign_keys COMMA • foreign_key
   14 foreign_key: • FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    FOREIGN  shift, and go to state 124

    foreign_key  go to state 146


State 142

   11 primary_key: PRIMARY KEY OPEN_PAR columns CLOSE_PAR •

    $default  reduce using rule 11 (primary_key)


State 143

   16 columns: columns COMMA • column
   17 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 136

    column  go to state 147


State 144

   14 foreign_key: FOREIGN KEY OPEN_PAR • column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR
   17 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 136

    column  go to state 148


State 145

    9 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON •

    $default  reduce using rule 9 (create_stmt)


State 146

   13 foreign_keys: foreign_keys COMMA foreign_key •

    $default  reduce using rule 13 (foreign_keys)


State 147

   16 columns: columns COMMA column •

    $default  reduce using rule 16 (columns)


State 148

   14 foreign_key: FOREIGN KEY OPEN_PAR column • CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    CLOSE_PAR  shift, and go to state 149


State 149

   14 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR • REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    REFERENCES  shift, and go to state 150


State 150

   14 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES • IDENTIFIER OPEN_PAR column CLOSE_PAR

    IDENTIFIER  shift, and go to state 151


State 151

   14 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER • OPEN_PAR column CLOSE_PAR

    OPEN_PAR  shift, and go to state 152


State 152

   14 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR • column CLOSE_PAR
   17 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 136

    column  go to state 153


State 153

   14 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 154


State 154

   14 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR •

    $default  reduce using rule 14 (foreign_key)
