Grammar

    0 $accept: statements $end

    1 statements: statement
    2           | statements statement

    3 statement: create_stmt
    4          | describe_stmt
    5          | drop_stmt
    6          | insert_stmt
    7          | delete_stmt
    8          | update_stmt
    9          | select_stmt
   10          | help_tables

   11 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   12            | CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

   13 primary_key: PRIMARY KEY OPEN_PAR columns CLOSE_PAR

   14 foreign_keys: foreign_key
   15             | foreign_keys COMMA foreign_key

   16 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

   17 columns: column
   18        | columns COMMA column

   19 column: IDENTIFIER

   20 definitions: definition
   21            | definitions COMMA definition

   22 definition: IDENTIFIER attr_type
   23           | IDENTIFIER attr_type CHECK expr

   24 attr_type: CHAR OPEN_PAR NUMBER CLOSE_PAR
   25          | INT OPEN_PAR NUMBER CLOSE_PAR
   26          | DECIMAL OPEN_PAR NUMBER CLOSE_PAR
   27          | INT
   28          | DECIMAL

   29 expr: or_expr

   30 or_expr: and_expr
   31        | or_expr OR and_expr

   32 and_expr: and_expr AND condition
   33         | condition

   34 condition: IDENTIFIER GE NUMBER
   35          | IDENTIFIER GT NUMBER
   36          | IDENTIFIER NE NUMBER
   37          | IDENTIFIER LT NUMBER
   38          | IDENTIFIER LE NUMBER
   39          | IDENTIFIER E NUMBER
   40          | OPEN_PAR expr CLOSE_PAR

   41 describe_stmt: DESCRIBE IDENTIFIER SEMICOLON

   42 drop_stmt: DROP TABLE IDENTIFIER SEMICOLON

   43 insert_stmt: INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON

   44 list_values: list_value
   45            | list_values COMMA list_value

   46 list_value: NUMBER
   47           | FLOAT
   48           | STRING

   49 delete_stmt: DELETE FROM IDENTIFIER WHERE sexpr SEMICOLON

   50 sexpr: sor_expr

   51 sor_expr: sand_expr
   52         | sor_expr OR sand_expr

   53 sand_expr: sand_expr AND scond_b
   54          | scond_b

   55 scond_b: IDENTIFIER GE diff_value
   56        | IDENTIFIER GT diff_value
   57        | IDENTIFIER NE diff_value
   58        | IDENTIFIER LT diff_value
   59        | IDENTIFIER LE diff_value
   60        | IDENTIFIER E diff_value
   61        | OPEN_PAR sexpr CLOSE_PAR

   62 diff_value: IDENTIFIER
   63           | diff_value_without_identifier

   64 diff_value_without_identifier: STRING
   65                              | NUMBER
   66                              | FLOAT

   67 update_stmt: UPDATE IDENTIFIER SET update_values WHERE sexpr SEMICOLON

   68 update_values: update_value
   69              | update_values COMMA update_value

   70 update_value: IDENTIFIER E diff_value_without_identifier

   71 select_stmt: SELECT columns FROM table_list WHERE sexpr SEMICOLON

   72 table_list: IDENTIFIER
   73           | table_list COMMA IDENTIFIER

   74 help_tables: HELP TABLES SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CREATE (258) 11 12
    TABLE (259) 11 12 42
    CHECK (260) 23
    PRIMARY (261) 13
    KEY (262) 13 16
    FOREIGN (263) 16
    REFERENCES (264) 16
    CHAR (265) 24
    INT (266) 25 27
    DECIMAL (267) 26 28
    OPEN_PAR (268) 11 12 13 16 24 25 26 40 43 61
    CLOSE_PAR (269) 11 12 13 16 24 25 26 40 43 61
    SEMICOLON (270) 11 12 41 42 43 49 67 71 74
    COMMA (271) 11 12 15 18 21 45 69 73
    OR (272) 31 52
    AND (273) 32 53
    GE (274) 34 55
    GT (275) 35 56
    LE (276) 38 59
    LT (277) 37 58
    E (278) 39 60 70
    NE (279) 36 57
    DESCRIBE (280) 41
    DROP (281) 42
    INSERT (282) 43
    INTO (283) 43
    VALUES (284) 43
    DELETE (285) 49
    FROM (286) 49 71
    WHERE (287) 49 67 71
    UPDATE (288) 67
    SET (289) 67
    SELECT (290) 71
    HELP (291) 74
    TABLES (292) 74
    IDENTIFIER <string> (293) 11 12 16 19 22 23 34 35 36 37 38 39 41 42 43 49 55 56 57 58 59 60 62 67 70 72 73
    STRING <string> (294) 48 64
    NUMBER <ival> (295) 24 25 26 34 35 36 37 38 39 46 65
    FLOAT <fval> (296) 47 66


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    statements (43)
        on left: 1 2
        on right: 0 2
    statement (44)
        on left: 3 4 5 6 7 8 9 10
        on right: 1 2
    create_stmt (45)
        on left: 11 12
        on right: 3
    primary_key <string_array> (46)
        on left: 13
        on right: 11 12
    foreign_keys <refer_list> (47)
        on left: 14 15
        on right: 11 15
    foreign_key <refer> (48)
        on left: 16
        on right: 14 15
    columns <string_array> (49)
        on left: 17 18
        on right: 13 18 71
    column <string> (50)
        on left: 19
        on right: 16 17 18
    definitions <cols> (51)
        on left: 20 21
        on right: 11 12 21
    definition <column> (52)
        on left: 22 23
        on right: 20 21
    attr_type <column> (53)
        on left: 24 25 26 27 28
        on right: 22 23
    expr <condition> (54)
        on left: 29
        on right: 23 40
    or_expr <condition> (55)
        on left: 30 31
        on right: 29 31
    and_expr <condition> (56)
        on left: 32 33
        on right: 30 31 32
    condition <condition> (57)
        on left: 34 35 36 37 38 39 40
        on right: 32 33
    describe_stmt (58)
        on left: 41
        on right: 4
    drop_stmt (59)
        on left: 42
        on right: 5
    insert_stmt (60)
        on left: 43
        on right: 6
    list_values <literals_list> (61)
        on left: 44 45
        on right: 43 45
    list_value <literal> (62)
        on left: 46 47 48
        on right: 44 45
    delete_stmt (63)
        on left: 49
        on right: 7
    sexpr <scond> (64)
        on left: 50
        on right: 49 61 67 71
    sor_expr <scond> (65)
        on left: 51 52
        on right: 50 52
    sand_expr <scond> (66)
        on left: 53 54
        on right: 51 52 53
    scond_b <scond> (67)
        on left: 55 56 57 58 59 60 61
        on right: 53 54
    diff_value <literal> (68)
        on left: 62 63
        on right: 55 56 57 58 59 60
    diff_value_without_identifier <literal> (69)
        on left: 64 65 66
        on right: 63 70
    update_stmt (70)
        on left: 67
        on right: 8
    update_values <list_sets> (71)
        on left: 68 69
        on right: 67 69
    update_value <update_set_val> (72)
        on left: 70
        on right: 68 69
    select_stmt (73)
        on left: 71
        on right: 9
    table_list <string_array> (74)
        on left: 72 73
        on right: 71 73
    help_tables (75)
        on left: 74
        on right: 10


State 0

    0 $accept: • statements $end
    1 statements: • statement
    2           | • statements statement
    3 statement: • create_stmt
    4          | • describe_stmt
    5          | • drop_stmt
    6          | • insert_stmt
    7          | • delete_stmt
    8          | • update_stmt
    9          | • select_stmt
   10          | • help_tables
   11 create_stmt: • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   12            | • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON
   41 describe_stmt: • DESCRIBE IDENTIFIER SEMICOLON
   42 drop_stmt: • DROP TABLE IDENTIFIER SEMICOLON
   43 insert_stmt: • INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON
   49 delete_stmt: • DELETE FROM IDENTIFIER WHERE sexpr SEMICOLON
   67 update_stmt: • UPDATE IDENTIFIER SET update_values WHERE sexpr SEMICOLON
   71 select_stmt: • SELECT columns FROM table_list WHERE sexpr SEMICOLON
   74 help_tables: • HELP TABLES SEMICOLON

    CREATE    shift, and go to state 1
    DESCRIBE  shift, and go to state 2
    DROP      shift, and go to state 3
    INSERT    shift, and go to state 4
    DELETE    shift, and go to state 5
    UPDATE    shift, and go to state 6
    SELECT    shift, and go to state 7
    HELP      shift, and go to state 8

    statements     go to state 9
    statement      go to state 10
    create_stmt    go to state 11
    describe_stmt  go to state 12
    drop_stmt      go to state 13
    insert_stmt    go to state 14
    delete_stmt    go to state 15
    update_stmt    go to state 16
    select_stmt    go to state 17
    help_tables    go to state 18


State 1

   11 create_stmt: CREATE • TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   12            | CREATE • TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

    TABLE  shift, and go to state 19


State 2

   41 describe_stmt: DESCRIBE • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 20


State 3

   42 drop_stmt: DROP • TABLE IDENTIFIER SEMICOLON

    TABLE  shift, and go to state 21


State 4

   43 insert_stmt: INSERT • INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON

    INTO  shift, and go to state 22


State 5

   49 delete_stmt: DELETE • FROM IDENTIFIER WHERE sexpr SEMICOLON

    FROM  shift, and go to state 23


State 6

   67 update_stmt: UPDATE • IDENTIFIER SET update_values WHERE sexpr SEMICOLON

    IDENTIFIER  shift, and go to state 24


State 7

   17 columns: • column
   18        | • columns COMMA column
   19 column: • IDENTIFIER
   71 select_stmt: SELECT • columns FROM table_list WHERE sexpr SEMICOLON

    IDENTIFIER  shift, and go to state 25

    columns  go to state 26
    column   go to state 27


State 8

   74 help_tables: HELP • TABLES SEMICOLON

    TABLES  shift, and go to state 28


State 9

    0 $accept: statements • $end
    2 statements: statements • statement
    3 statement: • create_stmt
    4          | • describe_stmt
    5          | • drop_stmt
    6          | • insert_stmt
    7          | • delete_stmt
    8          | • update_stmt
    9          | • select_stmt
   10          | • help_tables
   11 create_stmt: • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   12            | • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON
   41 describe_stmt: • DESCRIBE IDENTIFIER SEMICOLON
   42 drop_stmt: • DROP TABLE IDENTIFIER SEMICOLON
   43 insert_stmt: • INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON
   49 delete_stmt: • DELETE FROM IDENTIFIER WHERE sexpr SEMICOLON
   67 update_stmt: • UPDATE IDENTIFIER SET update_values WHERE sexpr SEMICOLON
   71 select_stmt: • SELECT columns FROM table_list WHERE sexpr SEMICOLON
   74 help_tables: • HELP TABLES SEMICOLON

    $end      shift, and go to state 29
    CREATE    shift, and go to state 1
    DESCRIBE  shift, and go to state 2
    DROP      shift, and go to state 3
    INSERT    shift, and go to state 4
    DELETE    shift, and go to state 5
    UPDATE    shift, and go to state 6
    SELECT    shift, and go to state 7
    HELP      shift, and go to state 8

    statement      go to state 30
    create_stmt    go to state 11
    describe_stmt  go to state 12
    drop_stmt      go to state 13
    insert_stmt    go to state 14
    delete_stmt    go to state 15
    update_stmt    go to state 16
    select_stmt    go to state 17
    help_tables    go to state 18


State 10

    1 statements: statement •

    $default  reduce using rule 1 (statements)


State 11

    3 statement: create_stmt •

    $default  reduce using rule 3 (statement)


State 12

    4 statement: describe_stmt •

    $default  reduce using rule 4 (statement)


State 13

    5 statement: drop_stmt •

    $default  reduce using rule 5 (statement)


State 14

    6 statement: insert_stmt •

    $default  reduce using rule 6 (statement)


State 15

    7 statement: delete_stmt •

    $default  reduce using rule 7 (statement)


State 16

    8 statement: update_stmt •

    $default  reduce using rule 8 (statement)


State 17

    9 statement: select_stmt •

    $default  reduce using rule 9 (statement)


State 18

   10 statement: help_tables •

    $default  reduce using rule 10 (statement)


State 19

   11 create_stmt: CREATE TABLE • IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   12            | CREATE TABLE • IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

    IDENTIFIER  shift, and go to state 31


State 20

   41 describe_stmt: DESCRIBE IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 32


State 21

   42 drop_stmt: DROP TABLE • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 33


State 22

   43 insert_stmt: INSERT INTO • IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON

    IDENTIFIER  shift, and go to state 34


State 23

   49 delete_stmt: DELETE FROM • IDENTIFIER WHERE sexpr SEMICOLON

    IDENTIFIER  shift, and go to state 35


State 24

   67 update_stmt: UPDATE IDENTIFIER • SET update_values WHERE sexpr SEMICOLON

    SET  shift, and go to state 36


State 25

   19 column: IDENTIFIER •

    $default  reduce using rule 19 (column)


State 26

   18 columns: columns • COMMA column
   71 select_stmt: SELECT columns • FROM table_list WHERE sexpr SEMICOLON

    COMMA  shift, and go to state 37
    FROM   shift, and go to state 38


State 27

   17 columns: column •

    $default  reduce using rule 17 (columns)


State 28

   74 help_tables: HELP TABLES • SEMICOLON

    SEMICOLON  shift, and go to state 39


State 29

    0 $accept: statements $end •

    $default  accept


State 30

    2 statements: statements statement •

    $default  reduce using rule 2 (statements)


State 31

   11 create_stmt: CREATE TABLE IDENTIFIER • OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   12            | CREATE TABLE IDENTIFIER • OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

    OPEN_PAR  shift, and go to state 40


State 32

   41 describe_stmt: DESCRIBE IDENTIFIER SEMICOLON •

    $default  reduce using rule 41 (describe_stmt)


State 33

   42 drop_stmt: DROP TABLE IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 41


State 34

   43 insert_stmt: INSERT INTO IDENTIFIER • VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON

    VALUES  shift, and go to state 42


State 35

   49 delete_stmt: DELETE FROM IDENTIFIER • WHERE sexpr SEMICOLON

    WHERE  shift, and go to state 43


State 36

   67 update_stmt: UPDATE IDENTIFIER SET • update_values WHERE sexpr SEMICOLON
   68 update_values: • update_value
   69              | • update_values COMMA update_value
   70 update_value: • IDENTIFIER E diff_value_without_identifier

    IDENTIFIER  shift, and go to state 44

    update_values  go to state 45
    update_value   go to state 46


State 37

   18 columns: columns COMMA • column
   19 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 25

    column  go to state 47


State 38

   71 select_stmt: SELECT columns FROM • table_list WHERE sexpr SEMICOLON
   72 table_list: • IDENTIFIER
   73           | • table_list COMMA IDENTIFIER

    IDENTIFIER  shift, and go to state 48

    table_list  go to state 49


State 39

   74 help_tables: HELP TABLES SEMICOLON •

    $default  reduce using rule 74 (help_tables)


State 40

   11 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR • definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   12            | CREATE TABLE IDENTIFIER OPEN_PAR • definitions COMMA primary_key CLOSE_PAR SEMICOLON
   20 definitions: • definition
   21            | • definitions COMMA definition
   22 definition: • IDENTIFIER attr_type
   23           | • IDENTIFIER attr_type CHECK expr

    IDENTIFIER  shift, and go to state 50

    definitions  go to state 51
    definition   go to state 52


State 41

   42 drop_stmt: DROP TABLE IDENTIFIER SEMICOLON •

    $default  reduce using rule 42 (drop_stmt)


State 42

   43 insert_stmt: INSERT INTO IDENTIFIER VALUES • OPEN_PAR list_values CLOSE_PAR SEMICOLON

    OPEN_PAR  shift, and go to state 53


State 43

   49 delete_stmt: DELETE FROM IDENTIFIER WHERE • sexpr SEMICOLON
   50 sexpr: • sor_expr
   51 sor_expr: • sand_expr
   52         | • sor_expr OR sand_expr
   53 sand_expr: • sand_expr AND scond_b
   54          | • scond_b
   55 scond_b: • IDENTIFIER GE diff_value
   56        | • IDENTIFIER GT diff_value
   57        | • IDENTIFIER NE diff_value
   58        | • IDENTIFIER LT diff_value
   59        | • IDENTIFIER LE diff_value
   60        | • IDENTIFIER E diff_value
   61        | • OPEN_PAR sexpr CLOSE_PAR

    OPEN_PAR    shift, and go to state 54
    IDENTIFIER  shift, and go to state 55

    sexpr      go to state 56
    sor_expr   go to state 57
    sand_expr  go to state 58
    scond_b    go to state 59


State 44

   70 update_value: IDENTIFIER • E diff_value_without_identifier

    E  shift, and go to state 60


State 45

   67 update_stmt: UPDATE IDENTIFIER SET update_values • WHERE sexpr SEMICOLON
   69 update_values: update_values • COMMA update_value

    COMMA  shift, and go to state 61
    WHERE  shift, and go to state 62


State 46

   68 update_values: update_value •

    $default  reduce using rule 68 (update_values)


State 47

   18 columns: columns COMMA column •

    $default  reduce using rule 18 (columns)


State 48

   72 table_list: IDENTIFIER •

    $default  reduce using rule 72 (table_list)


State 49

   71 select_stmt: SELECT columns FROM table_list • WHERE sexpr SEMICOLON
   73 table_list: table_list • COMMA IDENTIFIER

    COMMA  shift, and go to state 63
    WHERE  shift, and go to state 64


State 50

   22 definition: IDENTIFIER • attr_type
   23           | IDENTIFIER • attr_type CHECK expr
   24 attr_type: • CHAR OPEN_PAR NUMBER CLOSE_PAR
   25          | • INT OPEN_PAR NUMBER CLOSE_PAR
   26          | • DECIMAL OPEN_PAR NUMBER CLOSE_PAR
   27          | • INT
   28          | • DECIMAL

    CHAR     shift, and go to state 65
    INT      shift, and go to state 66
    DECIMAL  shift, and go to state 67

    attr_type  go to state 68


State 51

   11 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions • COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   12            | CREATE TABLE IDENTIFIER OPEN_PAR definitions • COMMA primary_key CLOSE_PAR SEMICOLON
   21 definitions: definitions • COMMA definition

    COMMA  shift, and go to state 69


State 52

   20 definitions: definition •

    $default  reduce using rule 20 (definitions)


State 53

   43 insert_stmt: INSERT INTO IDENTIFIER VALUES OPEN_PAR • list_values CLOSE_PAR SEMICOLON
   44 list_values: • list_value
   45            | • list_values COMMA list_value
   46 list_value: • NUMBER
   47           | • FLOAT
   48           | • STRING

    STRING  shift, and go to state 70
    NUMBER  shift, and go to state 71
    FLOAT   shift, and go to state 72

    list_values  go to state 73
    list_value   go to state 74


State 54

   50 sexpr: • sor_expr
   51 sor_expr: • sand_expr
   52         | • sor_expr OR sand_expr
   53 sand_expr: • sand_expr AND scond_b
   54          | • scond_b
   55 scond_b: • IDENTIFIER GE diff_value
   56        | • IDENTIFIER GT diff_value
   57        | • IDENTIFIER NE diff_value
   58        | • IDENTIFIER LT diff_value
   59        | • IDENTIFIER LE diff_value
   60        | • IDENTIFIER E diff_value
   61        | • OPEN_PAR sexpr CLOSE_PAR
   61        | OPEN_PAR • sexpr CLOSE_PAR

    OPEN_PAR    shift, and go to state 54
    IDENTIFIER  shift, and go to state 55

    sexpr      go to state 75
    sor_expr   go to state 57
    sand_expr  go to state 58
    scond_b    go to state 59


State 55

   55 scond_b: IDENTIFIER • GE diff_value
   56        | IDENTIFIER • GT diff_value
   57        | IDENTIFIER • NE diff_value
   58        | IDENTIFIER • LT diff_value
   59        | IDENTIFIER • LE diff_value
   60        | IDENTIFIER • E diff_value

    GE  shift, and go to state 76
    GT  shift, and go to state 77
    LE  shift, and go to state 78
    LT  shift, and go to state 79
    E   shift, and go to state 80
    NE  shift, and go to state 81


State 56

   49 delete_stmt: DELETE FROM IDENTIFIER WHERE sexpr • SEMICOLON

    SEMICOLON  shift, and go to state 82


State 57

   50 sexpr: sor_expr •  [CLOSE_PAR, SEMICOLON]
   52 sor_expr: sor_expr • OR sand_expr

    OR  shift, and go to state 83

    $default  reduce using rule 50 (sexpr)


State 58

   51 sor_expr: sand_expr •  [CLOSE_PAR, SEMICOLON, OR]
   53 sand_expr: sand_expr • AND scond_b

    AND  shift, and go to state 84

    $default  reduce using rule 51 (sor_expr)


State 59

   54 sand_expr: scond_b •

    $default  reduce using rule 54 (sand_expr)


State 60

   64 diff_value_without_identifier: • STRING
   65                              | • NUMBER
   66                              | • FLOAT
   70 update_value: IDENTIFIER E • diff_value_without_identifier

    STRING  shift, and go to state 85
    NUMBER  shift, and go to state 86
    FLOAT   shift, and go to state 87

    diff_value_without_identifier  go to state 88


State 61

   69 update_values: update_values COMMA • update_value
   70 update_value: • IDENTIFIER E diff_value_without_identifier

    IDENTIFIER  shift, and go to state 44

    update_value  go to state 89


State 62

   50 sexpr: • sor_expr
   51 sor_expr: • sand_expr
   52         | • sor_expr OR sand_expr
   53 sand_expr: • sand_expr AND scond_b
   54          | • scond_b
   55 scond_b: • IDENTIFIER GE diff_value
   56        | • IDENTIFIER GT diff_value
   57        | • IDENTIFIER NE diff_value
   58        | • IDENTIFIER LT diff_value
   59        | • IDENTIFIER LE diff_value
   60        | • IDENTIFIER E diff_value
   61        | • OPEN_PAR sexpr CLOSE_PAR
   67 update_stmt: UPDATE IDENTIFIER SET update_values WHERE • sexpr SEMICOLON

    OPEN_PAR    shift, and go to state 54
    IDENTIFIER  shift, and go to state 55

    sexpr      go to state 90
    sor_expr   go to state 57
    sand_expr  go to state 58
    scond_b    go to state 59


State 63

   73 table_list: table_list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 91


State 64

   50 sexpr: • sor_expr
   51 sor_expr: • sand_expr
   52         | • sor_expr OR sand_expr
   53 sand_expr: • sand_expr AND scond_b
   54          | • scond_b
   55 scond_b: • IDENTIFIER GE diff_value
   56        | • IDENTIFIER GT diff_value
   57        | • IDENTIFIER NE diff_value
   58        | • IDENTIFIER LT diff_value
   59        | • IDENTIFIER LE diff_value
   60        | • IDENTIFIER E diff_value
   61        | • OPEN_PAR sexpr CLOSE_PAR
   71 select_stmt: SELECT columns FROM table_list WHERE • sexpr SEMICOLON

    OPEN_PAR    shift, and go to state 54
    IDENTIFIER  shift, and go to state 55

    sexpr      go to state 92
    sor_expr   go to state 57
    sand_expr  go to state 58
    scond_b    go to state 59


State 65

   24 attr_type: CHAR • OPEN_PAR NUMBER CLOSE_PAR

    OPEN_PAR  shift, and go to state 93


State 66

   25 attr_type: INT • OPEN_PAR NUMBER CLOSE_PAR
   27          | INT •  [CHECK, COMMA]

    OPEN_PAR  shift, and go to state 94

    $default  reduce using rule 27 (attr_type)


State 67

   26 attr_type: DECIMAL • OPEN_PAR NUMBER CLOSE_PAR
   28          | DECIMAL •  [CHECK, COMMA]

    OPEN_PAR  shift, and go to state 95

    $default  reduce using rule 28 (attr_type)


State 68

   22 definition: IDENTIFIER attr_type •  [COMMA]
   23           | IDENTIFIER attr_type • CHECK expr

    CHECK  shift, and go to state 96

    $default  reduce using rule 22 (definition)


State 69

   11 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA • primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
   12            | CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA • primary_key CLOSE_PAR SEMICOLON
   13 primary_key: • PRIMARY KEY OPEN_PAR columns CLOSE_PAR
   21 definitions: definitions COMMA • definition
   22 definition: • IDENTIFIER attr_type
   23           | • IDENTIFIER attr_type CHECK expr

    PRIMARY     shift, and go to state 97
    IDENTIFIER  shift, and go to state 50

    primary_key  go to state 98
    definition   go to state 99


State 70

   48 list_value: STRING •

    $default  reduce using rule 48 (list_value)


State 71

   46 list_value: NUMBER •

    $default  reduce using rule 46 (list_value)


State 72

   47 list_value: FLOAT •

    $default  reduce using rule 47 (list_value)


State 73

   43 insert_stmt: INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values • CLOSE_PAR SEMICOLON
   45 list_values: list_values • COMMA list_value

    CLOSE_PAR  shift, and go to state 100
    COMMA      shift, and go to state 101


State 74

   44 list_values: list_value •

    $default  reduce using rule 44 (list_values)


State 75

   61 scond_b: OPEN_PAR sexpr • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 102


State 76

   55 scond_b: IDENTIFIER GE • diff_value
   62 diff_value: • IDENTIFIER
   63           | • diff_value_without_identifier
   64 diff_value_without_identifier: • STRING
   65                              | • NUMBER
   66                              | • FLOAT

    IDENTIFIER  shift, and go to state 103
    STRING      shift, and go to state 85
    NUMBER      shift, and go to state 86
    FLOAT       shift, and go to state 87

    diff_value                     go to state 104
    diff_value_without_identifier  go to state 105


State 77

   56 scond_b: IDENTIFIER GT • diff_value
   62 diff_value: • IDENTIFIER
   63           | • diff_value_without_identifier
   64 diff_value_without_identifier: • STRING
   65                              | • NUMBER
   66                              | • FLOAT

    IDENTIFIER  shift, and go to state 103
    STRING      shift, and go to state 85
    NUMBER      shift, and go to state 86
    FLOAT       shift, and go to state 87

    diff_value                     go to state 106
    diff_value_without_identifier  go to state 105


State 78

   59 scond_b: IDENTIFIER LE • diff_value
   62 diff_value: • IDENTIFIER
   63           | • diff_value_without_identifier
   64 diff_value_without_identifier: • STRING
   65                              | • NUMBER
   66                              | • FLOAT

    IDENTIFIER  shift, and go to state 103
    STRING      shift, and go to state 85
    NUMBER      shift, and go to state 86
    FLOAT       shift, and go to state 87

    diff_value                     go to state 107
    diff_value_without_identifier  go to state 105


State 79

   58 scond_b: IDENTIFIER LT • diff_value
   62 diff_value: • IDENTIFIER
   63           | • diff_value_without_identifier
   64 diff_value_without_identifier: • STRING
   65                              | • NUMBER
   66                              | • FLOAT

    IDENTIFIER  shift, and go to state 103
    STRING      shift, and go to state 85
    NUMBER      shift, and go to state 86
    FLOAT       shift, and go to state 87

    diff_value                     go to state 108
    diff_value_without_identifier  go to state 105


State 80

   60 scond_b: IDENTIFIER E • diff_value
   62 diff_value: • IDENTIFIER
   63           | • diff_value_without_identifier
   64 diff_value_without_identifier: • STRING
   65                              | • NUMBER
   66                              | • FLOAT

    IDENTIFIER  shift, and go to state 103
    STRING      shift, and go to state 85
    NUMBER      shift, and go to state 86
    FLOAT       shift, and go to state 87

    diff_value                     go to state 109
    diff_value_without_identifier  go to state 105


State 81

   57 scond_b: IDENTIFIER NE • diff_value
   62 diff_value: • IDENTIFIER
   63           | • diff_value_without_identifier
   64 diff_value_without_identifier: • STRING
   65                              | • NUMBER
   66                              | • FLOAT

    IDENTIFIER  shift, and go to state 103
    STRING      shift, and go to state 85
    NUMBER      shift, and go to state 86
    FLOAT       shift, and go to state 87

    diff_value                     go to state 110
    diff_value_without_identifier  go to state 105


State 82

   49 delete_stmt: DELETE FROM IDENTIFIER WHERE sexpr SEMICOLON •

    $default  reduce using rule 49 (delete_stmt)


State 83

   52 sor_expr: sor_expr OR • sand_expr
   53 sand_expr: • sand_expr AND scond_b
   54          | • scond_b
   55 scond_b: • IDENTIFIER GE diff_value
   56        | • IDENTIFIER GT diff_value
   57        | • IDENTIFIER NE diff_value
   58        | • IDENTIFIER LT diff_value
   59        | • IDENTIFIER LE diff_value
   60        | • IDENTIFIER E diff_value
   61        | • OPEN_PAR sexpr CLOSE_PAR

    OPEN_PAR    shift, and go to state 54
    IDENTIFIER  shift, and go to state 55

    sand_expr  go to state 111
    scond_b    go to state 59


State 84

   53 sand_expr: sand_expr AND • scond_b
   55 scond_b: • IDENTIFIER GE diff_value
   56        | • IDENTIFIER GT diff_value
   57        | • IDENTIFIER NE diff_value
   58        | • IDENTIFIER LT diff_value
   59        | • IDENTIFIER LE diff_value
   60        | • IDENTIFIER E diff_value
   61        | • OPEN_PAR sexpr CLOSE_PAR

    OPEN_PAR    shift, and go to state 54
    IDENTIFIER  shift, and go to state 55

    scond_b  go to state 112


State 85

   64 diff_value_without_identifier: STRING •

    $default  reduce using rule 64 (diff_value_without_identifier)


State 86

   65 diff_value_without_identifier: NUMBER •

    $default  reduce using rule 65 (diff_value_without_identifier)


State 87

   66 diff_value_without_identifier: FLOAT •

    $default  reduce using rule 66 (diff_value_without_identifier)


State 88

   70 update_value: IDENTIFIER E diff_value_without_identifier •

    $default  reduce using rule 70 (update_value)


State 89

   69 update_values: update_values COMMA update_value •

    $default  reduce using rule 69 (update_values)


State 90

   67 update_stmt: UPDATE IDENTIFIER SET update_values WHERE sexpr • SEMICOLON

    SEMICOLON  shift, and go to state 113


State 91

   73 table_list: table_list COMMA IDENTIFIER •

    $default  reduce using rule 73 (table_list)


State 92

   71 select_stmt: SELECT columns FROM table_list WHERE sexpr • SEMICOLON

    SEMICOLON  shift, and go to state 114


State 93

   24 attr_type: CHAR OPEN_PAR • NUMBER CLOSE_PAR

    NUMBER  shift, and go to state 115


State 94

   25 attr_type: INT OPEN_PAR • NUMBER CLOSE_PAR

    NUMBER  shift, and go to state 116


State 95

   26 attr_type: DECIMAL OPEN_PAR • NUMBER CLOSE_PAR

    NUMBER  shift, and go to state 117


State 96

   23 definition: IDENTIFIER attr_type CHECK • expr
   29 expr: • or_expr
   30 or_expr: • and_expr
   31        | • or_expr OR and_expr
   32 and_expr: • and_expr AND condition
   33         | • condition
   34 condition: • IDENTIFIER GE NUMBER
   35          | • IDENTIFIER GT NUMBER
   36          | • IDENTIFIER NE NUMBER
   37          | • IDENTIFIER LT NUMBER
   38          | • IDENTIFIER LE NUMBER
   39          | • IDENTIFIER E NUMBER
   40          | • OPEN_PAR expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 118
    IDENTIFIER  shift, and go to state 119

    expr       go to state 120
    or_expr    go to state 121
    and_expr   go to state 122
    condition  go to state 123


State 97

   13 primary_key: PRIMARY • KEY OPEN_PAR columns CLOSE_PAR

    KEY  shift, and go to state 124


State 98

   11 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key • COMMA foreign_keys CLOSE_PAR SEMICOLON
   12            | CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key • CLOSE_PAR SEMICOLON

    CLOSE_PAR  shift, and go to state 125
    COMMA      shift, and go to state 126


State 99

   21 definitions: definitions COMMA definition •

    $default  reduce using rule 21 (definitions)


State 100

   43 insert_stmt: INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR • SEMICOLON

    SEMICOLON  shift, and go to state 127


State 101

   45 list_values: list_values COMMA • list_value
   46 list_value: • NUMBER
   47           | • FLOAT
   48           | • STRING

    STRING  shift, and go to state 70
    NUMBER  shift, and go to state 71
    FLOAT   shift, and go to state 72

    list_value  go to state 128


State 102

   61 scond_b: OPEN_PAR sexpr CLOSE_PAR •

    $default  reduce using rule 61 (scond_b)


State 103

   62 diff_value: IDENTIFIER •

    $default  reduce using rule 62 (diff_value)


State 104

   55 scond_b: IDENTIFIER GE diff_value •

    $default  reduce using rule 55 (scond_b)


State 105

   63 diff_value: diff_value_without_identifier •

    $default  reduce using rule 63 (diff_value)


State 106

   56 scond_b: IDENTIFIER GT diff_value •

    $default  reduce using rule 56 (scond_b)


State 107

   59 scond_b: IDENTIFIER LE diff_value •

    $default  reduce using rule 59 (scond_b)


State 108

   58 scond_b: IDENTIFIER LT diff_value •

    $default  reduce using rule 58 (scond_b)


State 109

   60 scond_b: IDENTIFIER E diff_value •

    $default  reduce using rule 60 (scond_b)


State 110

   57 scond_b: IDENTIFIER NE diff_value •

    $default  reduce using rule 57 (scond_b)


State 111

   52 sor_expr: sor_expr OR sand_expr •  [CLOSE_PAR, SEMICOLON, OR]
   53 sand_expr: sand_expr • AND scond_b

    AND  shift, and go to state 84

    $default  reduce using rule 52 (sor_expr)


State 112

   53 sand_expr: sand_expr AND scond_b •

    $default  reduce using rule 53 (sand_expr)


State 113

   67 update_stmt: UPDATE IDENTIFIER SET update_values WHERE sexpr SEMICOLON •

    $default  reduce using rule 67 (update_stmt)


State 114

   71 select_stmt: SELECT columns FROM table_list WHERE sexpr SEMICOLON •

    $default  reduce using rule 71 (select_stmt)


State 115

   24 attr_type: CHAR OPEN_PAR NUMBER • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 129


State 116

   25 attr_type: INT OPEN_PAR NUMBER • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 130


State 117

   26 attr_type: DECIMAL OPEN_PAR NUMBER • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 131


State 118

   29 expr: • or_expr
   30 or_expr: • and_expr
   31        | • or_expr OR and_expr
   32 and_expr: • and_expr AND condition
   33         | • condition
   34 condition: • IDENTIFIER GE NUMBER
   35          | • IDENTIFIER GT NUMBER
   36          | • IDENTIFIER NE NUMBER
   37          | • IDENTIFIER LT NUMBER
   38          | • IDENTIFIER LE NUMBER
   39          | • IDENTIFIER E NUMBER
   40          | • OPEN_PAR expr CLOSE_PAR
   40          | OPEN_PAR • expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 118
    IDENTIFIER  shift, and go to state 119

    expr       go to state 132
    or_expr    go to state 121
    and_expr   go to state 122
    condition  go to state 123


State 119

   34 condition: IDENTIFIER • GE NUMBER
   35          | IDENTIFIER • GT NUMBER
   36          | IDENTIFIER • NE NUMBER
   37          | IDENTIFIER • LT NUMBER
   38          | IDENTIFIER • LE NUMBER
   39          | IDENTIFIER • E NUMBER

    GE  shift, and go to state 133
    GT  shift, and go to state 134
    LE  shift, and go to state 135
    LT  shift, and go to state 136
    E   shift, and go to state 137
    NE  shift, and go to state 138


State 120

   23 definition: IDENTIFIER attr_type CHECK expr •

    $default  reduce using rule 23 (definition)


State 121

   29 expr: or_expr •  [CLOSE_PAR, COMMA]
   31 or_expr: or_expr • OR and_expr

    OR  shift, and go to state 139

    $default  reduce using rule 29 (expr)


State 122

   30 or_expr: and_expr •  [CLOSE_PAR, COMMA, OR]
   32 and_expr: and_expr • AND condition

    AND  shift, and go to state 140

    $default  reduce using rule 30 (or_expr)


State 123

   33 and_expr: condition •

    $default  reduce using rule 33 (and_expr)


State 124

   13 primary_key: PRIMARY KEY • OPEN_PAR columns CLOSE_PAR

    OPEN_PAR  shift, and go to state 141


State 125

   12 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR • SEMICOLON

    SEMICOLON  shift, and go to state 142


State 126

   11 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA • foreign_keys CLOSE_PAR SEMICOLON
   14 foreign_keys: • foreign_key
   15             | • foreign_keys COMMA foreign_key
   16 foreign_key: • FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    FOREIGN  shift, and go to state 143

    foreign_keys  go to state 144
    foreign_key   go to state 145


State 127

   43 insert_stmt: INSERT INTO IDENTIFIER VALUES OPEN_PAR list_values CLOSE_PAR SEMICOLON •

    $default  reduce using rule 43 (insert_stmt)


State 128

   45 list_values: list_values COMMA list_value •

    $default  reduce using rule 45 (list_values)


State 129

   24 attr_type: CHAR OPEN_PAR NUMBER CLOSE_PAR •

    $default  reduce using rule 24 (attr_type)


State 130

   25 attr_type: INT OPEN_PAR NUMBER CLOSE_PAR •

    $default  reduce using rule 25 (attr_type)


State 131

   26 attr_type: DECIMAL OPEN_PAR NUMBER CLOSE_PAR •

    $default  reduce using rule 26 (attr_type)


State 132

   40 condition: OPEN_PAR expr • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 146


State 133

   34 condition: IDENTIFIER GE • NUMBER

    NUMBER  shift, and go to state 147


State 134

   35 condition: IDENTIFIER GT • NUMBER

    NUMBER  shift, and go to state 148


State 135

   38 condition: IDENTIFIER LE • NUMBER

    NUMBER  shift, and go to state 149


State 136

   37 condition: IDENTIFIER LT • NUMBER

    NUMBER  shift, and go to state 150


State 137

   39 condition: IDENTIFIER E • NUMBER

    NUMBER  shift, and go to state 151


State 138

   36 condition: IDENTIFIER NE • NUMBER

    NUMBER  shift, and go to state 152


State 139

   31 or_expr: or_expr OR • and_expr
   32 and_expr: • and_expr AND condition
   33         | • condition
   34 condition: • IDENTIFIER GE NUMBER
   35          | • IDENTIFIER GT NUMBER
   36          | • IDENTIFIER NE NUMBER
   37          | • IDENTIFIER LT NUMBER
   38          | • IDENTIFIER LE NUMBER
   39          | • IDENTIFIER E NUMBER
   40          | • OPEN_PAR expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 118
    IDENTIFIER  shift, and go to state 119

    and_expr   go to state 153
    condition  go to state 123


State 140

   32 and_expr: and_expr AND • condition
   34 condition: • IDENTIFIER GE NUMBER
   35          | • IDENTIFIER GT NUMBER
   36          | • IDENTIFIER NE NUMBER
   37          | • IDENTIFIER LT NUMBER
   38          | • IDENTIFIER LE NUMBER
   39          | • IDENTIFIER E NUMBER
   40          | • OPEN_PAR expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 118
    IDENTIFIER  shift, and go to state 119

    condition  go to state 154


State 141

   13 primary_key: PRIMARY KEY OPEN_PAR • columns CLOSE_PAR
   17 columns: • column
   18        | • columns COMMA column
   19 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 25

    columns  go to state 155
    column   go to state 27


State 142

   12 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON •

    $default  reduce using rule 12 (create_stmt)


State 143

   16 foreign_key: FOREIGN • KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    KEY  shift, and go to state 156


State 144

   11 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys • CLOSE_PAR SEMICOLON
   15 foreign_keys: foreign_keys • COMMA foreign_key

    CLOSE_PAR  shift, and go to state 157
    COMMA      shift, and go to state 158


State 145

   14 foreign_keys: foreign_key •

    $default  reduce using rule 14 (foreign_keys)


State 146

   40 condition: OPEN_PAR expr CLOSE_PAR •

    $default  reduce using rule 40 (condition)


State 147

   34 condition: IDENTIFIER GE NUMBER •

    $default  reduce using rule 34 (condition)


State 148

   35 condition: IDENTIFIER GT NUMBER •

    $default  reduce using rule 35 (condition)


State 149

   38 condition: IDENTIFIER LE NUMBER •

    $default  reduce using rule 38 (condition)


State 150

   37 condition: IDENTIFIER LT NUMBER •

    $default  reduce using rule 37 (condition)


State 151

   39 condition: IDENTIFIER E NUMBER •

    $default  reduce using rule 39 (condition)


State 152

   36 condition: IDENTIFIER NE NUMBER •

    $default  reduce using rule 36 (condition)


State 153

   31 or_expr: or_expr OR and_expr •  [CLOSE_PAR, COMMA, OR]
   32 and_expr: and_expr • AND condition

    AND  shift, and go to state 140

    $default  reduce using rule 31 (or_expr)


State 154

   32 and_expr: and_expr AND condition •

    $default  reduce using rule 32 (and_expr)


State 155

   13 primary_key: PRIMARY KEY OPEN_PAR columns • CLOSE_PAR
   18 columns: columns • COMMA column

    CLOSE_PAR  shift, and go to state 159
    COMMA      shift, and go to state 37


State 156

   16 foreign_key: FOREIGN KEY • OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    OPEN_PAR  shift, and go to state 160


State 157

   11 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR • SEMICOLON

    SEMICOLON  shift, and go to state 161


State 158

   15 foreign_keys: foreign_keys COMMA • foreign_key
   16 foreign_key: • FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    FOREIGN  shift, and go to state 143

    foreign_key  go to state 162


State 159

   13 primary_key: PRIMARY KEY OPEN_PAR columns CLOSE_PAR •

    $default  reduce using rule 13 (primary_key)


State 160

   16 foreign_key: FOREIGN KEY OPEN_PAR • column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR
   19 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 25

    column  go to state 163


State 161

   11 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON •

    $default  reduce using rule 11 (create_stmt)


State 162

   15 foreign_keys: foreign_keys COMMA foreign_key •

    $default  reduce using rule 15 (foreign_keys)


State 163

   16 foreign_key: FOREIGN KEY OPEN_PAR column • CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    CLOSE_PAR  shift, and go to state 164


State 164

   16 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR • REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    REFERENCES  shift, and go to state 165


State 165

   16 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES • IDENTIFIER OPEN_PAR column CLOSE_PAR

    IDENTIFIER  shift, and go to state 166


State 166

   16 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER • OPEN_PAR column CLOSE_PAR

    OPEN_PAR  shift, and go to state 167


State 167

   16 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR • column CLOSE_PAR
   19 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 25

    column  go to state 168


State 168

   16 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 169


State 169

   16 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR •

    $default  reduce using rule 16 (foreign_key)
