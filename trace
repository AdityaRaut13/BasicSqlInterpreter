Grammar

    0 $accept: statements $end

    1 statements: statement
    2           | statements statement

    3 statement: create_stmt
    4          | describe_stmt
    5          | drop_stmt

    6 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    7            | CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

    8 primary_key: PRIMARY KEY OPEN_PAR columns CLOSE_PAR

    9 foreign_keys: foreign_key
   10             | foreign_keys COMMA foreign_key

   11 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

   12 columns: column
   13        | columns COMMA column

   14 column: IDENTIFIER

   15 definitions: definition
   16            | definitions COMMA definition

   17 definition: IDENTIFIER attr_type
   18           | IDENTIFIER attr_type CHECK expr

   19 attr_type: CHAR OPEN_PAR NUMBER CLOSE_PAR
   20          | INT OPEN_PAR NUMBER CLOSE_PAR
   21          | DECIMAL OPEN_PAR NUMBER CLOSE_PAR
   22          | INT
   23          | DECIMAL

   24 expr: or_expr

   25 or_expr: and_expr
   26        | or_expr OR and_expr

   27 and_expr: and_expr AND condition
   28         | condition

   29 condition: IDENTIFIER GE NUMBER
   30          | IDENTIFIER GT NUMBER
   31          | IDENTIFIER NE NUMBER
   32          | IDENTIFIER LT NUMBER
   33          | IDENTIFIER LE NUMBER
   34          | IDENTIFIER E NUMBER
   35          | OPEN_PAR expr CLOSE_PAR

   36 describe_stmt: DESCRIBE IDENTIFIER SEMICOLON

   37 drop_stmt: DROP TABLE IDENTIFIER SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CREATE (258) 6 7
    TABLE (259) 6 7 37
    CHECK (260) 18
    PRIMARY (261) 8
    KEY (262) 8 11
    FOREIGN (263) 11
    REFERENCES (264) 11
    CHAR (265) 19
    INT (266) 20 22
    DECIMAL (267) 21 23
    OPEN_PAR (268) 6 7 8 11 19 20 21 35
    CLOSE_PAR (269) 6 7 8 11 19 20 21 35
    SEMICOLON (270) 6 7 36 37
    COMMA (271) 6 7 10 13 16
    OR (272) 26
    AND (273) 27
    GE (274) 29
    GT (275) 30
    LE (276) 33
    LT (277) 32
    E (278) 34
    NE (279) 31
    DESCRIBE (280) 36
    DROP (281) 37
    IDENTIFIER <string> (282) 6 7 11 14 17 18 29 30 31 32 33 34 36 37
    NUMBER <ival> (283) 19 20 21 29 30 31 32 33 34


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    statements (30)
        on left: 1 2
        on right: 0 2
    statement (31)
        on left: 3 4 5
        on right: 1 2
    create_stmt (32)
        on left: 6 7
        on right: 3
    primary_key <string_array> (33)
        on left: 8
        on right: 6 7
    foreign_keys <refer_list> (34)
        on left: 9 10
        on right: 6 10
    foreign_key <refer> (35)
        on left: 11
        on right: 9 10
    columns <string_array> (36)
        on left: 12 13
        on right: 8 13
    column <string> (37)
        on left: 14
        on right: 11 12 13
    definitions <cols> (38)
        on left: 15 16
        on right: 6 7 16
    definition <column> (39)
        on left: 17 18
        on right: 15 16
    attr_type <column> (40)
        on left: 19 20 21 22 23
        on right: 17 18
    expr <condition> (41)
        on left: 24
        on right: 18 35
    or_expr <condition> (42)
        on left: 25 26
        on right: 24 26
    and_expr <condition> (43)
        on left: 27 28
        on right: 25 26 27
    condition <condition> (44)
        on left: 29 30 31 32 33 34 35
        on right: 27 28
    describe_stmt (45)
        on left: 36
        on right: 4
    drop_stmt (46)
        on left: 37
        on right: 5


State 0

    0 $accept: • statements $end
    1 statements: • statement
    2           | • statements statement
    3 statement: • create_stmt
    4          | • describe_stmt
    5          | • drop_stmt
    6 create_stmt: • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    7            | • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON
   36 describe_stmt: • DESCRIBE IDENTIFIER SEMICOLON
   37 drop_stmt: • DROP TABLE IDENTIFIER SEMICOLON

    CREATE    shift, and go to state 1
    DESCRIBE  shift, and go to state 2
    DROP      shift, and go to state 3

    statements     go to state 4
    statement      go to state 5
    create_stmt    go to state 6
    describe_stmt  go to state 7
    drop_stmt      go to state 8


State 1

    6 create_stmt: CREATE • TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    7            | CREATE • TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

    TABLE  shift, and go to state 9


State 2

   36 describe_stmt: DESCRIBE • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 10


State 3

   37 drop_stmt: DROP • TABLE IDENTIFIER SEMICOLON

    TABLE  shift, and go to state 11


State 4

    0 $accept: statements • $end
    2 statements: statements • statement
    3 statement: • create_stmt
    4          | • describe_stmt
    5          | • drop_stmt
    6 create_stmt: • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    7            | • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON
   36 describe_stmt: • DESCRIBE IDENTIFIER SEMICOLON
   37 drop_stmt: • DROP TABLE IDENTIFIER SEMICOLON

    $end      shift, and go to state 12
    CREATE    shift, and go to state 1
    DESCRIBE  shift, and go to state 2
    DROP      shift, and go to state 3

    statement      go to state 13
    create_stmt    go to state 6
    describe_stmt  go to state 7
    drop_stmt      go to state 8


State 5

    1 statements: statement •

    $default  reduce using rule 1 (statements)


State 6

    3 statement: create_stmt •

    $default  reduce using rule 3 (statement)


State 7

    4 statement: describe_stmt •

    $default  reduce using rule 4 (statement)


State 8

    5 statement: drop_stmt •

    $default  reduce using rule 5 (statement)


State 9

    6 create_stmt: CREATE TABLE • IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    7            | CREATE TABLE • IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

    IDENTIFIER  shift, and go to state 14


State 10

   36 describe_stmt: DESCRIBE IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 15


State 11

   37 drop_stmt: DROP TABLE • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 16


State 12

    0 $accept: statements $end •

    $default  accept


State 13

    2 statements: statements statement •

    $default  reduce using rule 2 (statements)


State 14

    6 create_stmt: CREATE TABLE IDENTIFIER • OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    7            | CREATE TABLE IDENTIFIER • OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

    OPEN_PAR  shift, and go to state 17


State 15

   36 describe_stmt: DESCRIBE IDENTIFIER SEMICOLON •

    $default  reduce using rule 36 (describe_stmt)


State 16

   37 drop_stmt: DROP TABLE IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 18


State 17

    6 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR • definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    7            | CREATE TABLE IDENTIFIER OPEN_PAR • definitions COMMA primary_key CLOSE_PAR SEMICOLON
   15 definitions: • definition
   16            | • definitions COMMA definition
   17 definition: • IDENTIFIER attr_type
   18           | • IDENTIFIER attr_type CHECK expr

    IDENTIFIER  shift, and go to state 19

    definitions  go to state 20
    definition   go to state 21


State 18

   37 drop_stmt: DROP TABLE IDENTIFIER SEMICOLON •

    $default  reduce using rule 37 (drop_stmt)


State 19

   17 definition: IDENTIFIER • attr_type
   18           | IDENTIFIER • attr_type CHECK expr
   19 attr_type: • CHAR OPEN_PAR NUMBER CLOSE_PAR
   20          | • INT OPEN_PAR NUMBER CLOSE_PAR
   21          | • DECIMAL OPEN_PAR NUMBER CLOSE_PAR
   22          | • INT
   23          | • DECIMAL

    CHAR     shift, and go to state 22
    INT      shift, and go to state 23
    DECIMAL  shift, and go to state 24

    attr_type  go to state 25


State 20

    6 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions • COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    7            | CREATE TABLE IDENTIFIER OPEN_PAR definitions • COMMA primary_key CLOSE_PAR SEMICOLON
   16 definitions: definitions • COMMA definition

    COMMA  shift, and go to state 26


State 21

   15 definitions: definition •

    $default  reduce using rule 15 (definitions)


State 22

   19 attr_type: CHAR • OPEN_PAR NUMBER CLOSE_PAR

    OPEN_PAR  shift, and go to state 27


State 23

   20 attr_type: INT • OPEN_PAR NUMBER CLOSE_PAR
   22          | INT •  [CHECK, COMMA]

    OPEN_PAR  shift, and go to state 28

    $default  reduce using rule 22 (attr_type)


State 24

   21 attr_type: DECIMAL • OPEN_PAR NUMBER CLOSE_PAR
   23          | DECIMAL •  [CHECK, COMMA]

    OPEN_PAR  shift, and go to state 29

    $default  reduce using rule 23 (attr_type)


State 25

   17 definition: IDENTIFIER attr_type •  [COMMA]
   18           | IDENTIFIER attr_type • CHECK expr

    CHECK  shift, and go to state 30

    $default  reduce using rule 17 (definition)


State 26

    6 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA • primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    7            | CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA • primary_key CLOSE_PAR SEMICOLON
    8 primary_key: • PRIMARY KEY OPEN_PAR columns CLOSE_PAR
   16 definitions: definitions COMMA • definition
   17 definition: • IDENTIFIER attr_type
   18           | • IDENTIFIER attr_type CHECK expr

    PRIMARY     shift, and go to state 31
    IDENTIFIER  shift, and go to state 19

    primary_key  go to state 32
    definition   go to state 33


State 27

   19 attr_type: CHAR OPEN_PAR • NUMBER CLOSE_PAR

    NUMBER  shift, and go to state 34


State 28

   20 attr_type: INT OPEN_PAR • NUMBER CLOSE_PAR

    NUMBER  shift, and go to state 35


State 29

   21 attr_type: DECIMAL OPEN_PAR • NUMBER CLOSE_PAR

    NUMBER  shift, and go to state 36


State 30

   18 definition: IDENTIFIER attr_type CHECK • expr
   24 expr: • or_expr
   25 or_expr: • and_expr
   26        | • or_expr OR and_expr
   27 and_expr: • and_expr AND condition
   28         | • condition
   29 condition: • IDENTIFIER GE NUMBER
   30          | • IDENTIFIER GT NUMBER
   31          | • IDENTIFIER NE NUMBER
   32          | • IDENTIFIER LT NUMBER
   33          | • IDENTIFIER LE NUMBER
   34          | • IDENTIFIER E NUMBER
   35          | • OPEN_PAR expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 37
    IDENTIFIER  shift, and go to state 38

    expr       go to state 39
    or_expr    go to state 40
    and_expr   go to state 41
    condition  go to state 42


State 31

    8 primary_key: PRIMARY • KEY OPEN_PAR columns CLOSE_PAR

    KEY  shift, and go to state 43


State 32

    6 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key • COMMA foreign_keys CLOSE_PAR SEMICOLON
    7            | CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key • CLOSE_PAR SEMICOLON

    CLOSE_PAR  shift, and go to state 44
    COMMA      shift, and go to state 45


State 33

   16 definitions: definitions COMMA definition •

    $default  reduce using rule 16 (definitions)


State 34

   19 attr_type: CHAR OPEN_PAR NUMBER • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 46


State 35

   20 attr_type: INT OPEN_PAR NUMBER • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 47


State 36

   21 attr_type: DECIMAL OPEN_PAR NUMBER • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 48


State 37

   24 expr: • or_expr
   25 or_expr: • and_expr
   26        | • or_expr OR and_expr
   27 and_expr: • and_expr AND condition
   28         | • condition
   29 condition: • IDENTIFIER GE NUMBER
   30          | • IDENTIFIER GT NUMBER
   31          | • IDENTIFIER NE NUMBER
   32          | • IDENTIFIER LT NUMBER
   33          | • IDENTIFIER LE NUMBER
   34          | • IDENTIFIER E NUMBER
   35          | • OPEN_PAR expr CLOSE_PAR
   35          | OPEN_PAR • expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 37
    IDENTIFIER  shift, and go to state 38

    expr       go to state 49
    or_expr    go to state 40
    and_expr   go to state 41
    condition  go to state 42


State 38

   29 condition: IDENTIFIER • GE NUMBER
   30          | IDENTIFIER • GT NUMBER
   31          | IDENTIFIER • NE NUMBER
   32          | IDENTIFIER • LT NUMBER
   33          | IDENTIFIER • LE NUMBER
   34          | IDENTIFIER • E NUMBER

    GE  shift, and go to state 50
    GT  shift, and go to state 51
    LE  shift, and go to state 52
    LT  shift, and go to state 53
    E   shift, and go to state 54
    NE  shift, and go to state 55


State 39

   18 definition: IDENTIFIER attr_type CHECK expr •

    $default  reduce using rule 18 (definition)


State 40

   24 expr: or_expr •  [CLOSE_PAR, COMMA]
   26 or_expr: or_expr • OR and_expr

    OR  shift, and go to state 56

    $default  reduce using rule 24 (expr)


State 41

   25 or_expr: and_expr •  [CLOSE_PAR, COMMA, OR]
   27 and_expr: and_expr • AND condition

    AND  shift, and go to state 57

    $default  reduce using rule 25 (or_expr)


State 42

   28 and_expr: condition •

    $default  reduce using rule 28 (and_expr)


State 43

    8 primary_key: PRIMARY KEY • OPEN_PAR columns CLOSE_PAR

    OPEN_PAR  shift, and go to state 58


State 44

    7 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR • SEMICOLON

    SEMICOLON  shift, and go to state 59


State 45

    6 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA • foreign_keys CLOSE_PAR SEMICOLON
    9 foreign_keys: • foreign_key
   10             | • foreign_keys COMMA foreign_key
   11 foreign_key: • FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    FOREIGN  shift, and go to state 60

    foreign_keys  go to state 61
    foreign_key   go to state 62


State 46

   19 attr_type: CHAR OPEN_PAR NUMBER CLOSE_PAR •

    $default  reduce using rule 19 (attr_type)


State 47

   20 attr_type: INT OPEN_PAR NUMBER CLOSE_PAR •

    $default  reduce using rule 20 (attr_type)


State 48

   21 attr_type: DECIMAL OPEN_PAR NUMBER CLOSE_PAR •

    $default  reduce using rule 21 (attr_type)


State 49

   35 condition: OPEN_PAR expr • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 63


State 50

   29 condition: IDENTIFIER GE • NUMBER

    NUMBER  shift, and go to state 64


State 51

   30 condition: IDENTIFIER GT • NUMBER

    NUMBER  shift, and go to state 65


State 52

   33 condition: IDENTIFIER LE • NUMBER

    NUMBER  shift, and go to state 66


State 53

   32 condition: IDENTIFIER LT • NUMBER

    NUMBER  shift, and go to state 67


State 54

   34 condition: IDENTIFIER E • NUMBER

    NUMBER  shift, and go to state 68


State 55

   31 condition: IDENTIFIER NE • NUMBER

    NUMBER  shift, and go to state 69


State 56

   26 or_expr: or_expr OR • and_expr
   27 and_expr: • and_expr AND condition
   28         | • condition
   29 condition: • IDENTIFIER GE NUMBER
   30          | • IDENTIFIER GT NUMBER
   31          | • IDENTIFIER NE NUMBER
   32          | • IDENTIFIER LT NUMBER
   33          | • IDENTIFIER LE NUMBER
   34          | • IDENTIFIER E NUMBER
   35          | • OPEN_PAR expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 37
    IDENTIFIER  shift, and go to state 38

    and_expr   go to state 70
    condition  go to state 42


State 57

   27 and_expr: and_expr AND • condition
   29 condition: • IDENTIFIER GE NUMBER
   30          | • IDENTIFIER GT NUMBER
   31          | • IDENTIFIER NE NUMBER
   32          | • IDENTIFIER LT NUMBER
   33          | • IDENTIFIER LE NUMBER
   34          | • IDENTIFIER E NUMBER
   35          | • OPEN_PAR expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 37
    IDENTIFIER  shift, and go to state 38

    condition  go to state 71


State 58

    8 primary_key: PRIMARY KEY OPEN_PAR • columns CLOSE_PAR
   12 columns: • column
   13        | • columns COMMA column
   14 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 72

    columns  go to state 73
    column   go to state 74


State 59

    7 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON •

    $default  reduce using rule 7 (create_stmt)


State 60

   11 foreign_key: FOREIGN • KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    KEY  shift, and go to state 75


State 61

    6 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys • CLOSE_PAR SEMICOLON
   10 foreign_keys: foreign_keys • COMMA foreign_key

    CLOSE_PAR  shift, and go to state 76
    COMMA      shift, and go to state 77


State 62

    9 foreign_keys: foreign_key •

    $default  reduce using rule 9 (foreign_keys)


State 63

   35 condition: OPEN_PAR expr CLOSE_PAR •

    $default  reduce using rule 35 (condition)


State 64

   29 condition: IDENTIFIER GE NUMBER •

    $default  reduce using rule 29 (condition)


State 65

   30 condition: IDENTIFIER GT NUMBER •

    $default  reduce using rule 30 (condition)


State 66

   33 condition: IDENTIFIER LE NUMBER •

    $default  reduce using rule 33 (condition)


State 67

   32 condition: IDENTIFIER LT NUMBER •

    $default  reduce using rule 32 (condition)


State 68

   34 condition: IDENTIFIER E NUMBER •

    $default  reduce using rule 34 (condition)


State 69

   31 condition: IDENTIFIER NE NUMBER •

    $default  reduce using rule 31 (condition)


State 70

   26 or_expr: or_expr OR and_expr •  [CLOSE_PAR, COMMA, OR]
   27 and_expr: and_expr • AND condition

    AND  shift, and go to state 57

    $default  reduce using rule 26 (or_expr)


State 71

   27 and_expr: and_expr AND condition •

    $default  reduce using rule 27 (and_expr)


State 72

   14 column: IDENTIFIER •

    $default  reduce using rule 14 (column)


State 73

    8 primary_key: PRIMARY KEY OPEN_PAR columns • CLOSE_PAR
   13 columns: columns • COMMA column

    CLOSE_PAR  shift, and go to state 78
    COMMA      shift, and go to state 79


State 74

   12 columns: column •

    $default  reduce using rule 12 (columns)


State 75

   11 foreign_key: FOREIGN KEY • OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    OPEN_PAR  shift, and go to state 80


State 76

    6 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR • SEMICOLON

    SEMICOLON  shift, and go to state 81


State 77

   10 foreign_keys: foreign_keys COMMA • foreign_key
   11 foreign_key: • FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    FOREIGN  shift, and go to state 60

    foreign_key  go to state 82


State 78

    8 primary_key: PRIMARY KEY OPEN_PAR columns CLOSE_PAR •

    $default  reduce using rule 8 (primary_key)


State 79

   13 columns: columns COMMA • column
   14 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 72

    column  go to state 83


State 80

   11 foreign_key: FOREIGN KEY OPEN_PAR • column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR
   14 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 72

    column  go to state 84


State 81

    6 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON •

    $default  reduce using rule 6 (create_stmt)


State 82

   10 foreign_keys: foreign_keys COMMA foreign_key •

    $default  reduce using rule 10 (foreign_keys)


State 83

   13 columns: columns COMMA column •

    $default  reduce using rule 13 (columns)


State 84

   11 foreign_key: FOREIGN KEY OPEN_PAR column • CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    CLOSE_PAR  shift, and go to state 85


State 85

   11 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR • REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    REFERENCES  shift, and go to state 86


State 86

   11 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES • IDENTIFIER OPEN_PAR column CLOSE_PAR

    IDENTIFIER  shift, and go to state 87


State 87

   11 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER • OPEN_PAR column CLOSE_PAR

    OPEN_PAR  shift, and go to state 88


State 88

   11 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR • column CLOSE_PAR
   14 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 72

    column  go to state 89


State 89

   11 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 90


State 90

   11 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR •

    $default  reduce using rule 11 (foreign_key)
