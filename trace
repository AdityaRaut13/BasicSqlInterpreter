Grammar

    0 $accept: statements $end

    1 statements: statement
    2           | statements statement

    3 statement: create_stmt
    4          | describe_stmt
    5          | drop_stmt
    6          | insert_stmt

    7 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    8            | CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

    9 primary_key: PRIMARY KEY OPEN_PAR columns CLOSE_PAR

   10 foreign_keys: foreign_key
   11             | foreign_keys COMMA foreign_key

   12 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

   13 columns: column
   14        | columns COMMA column

   15 column: IDENTIFIER

   16 definitions: definition
   17            | definitions COMMA definition

   18 definition: IDENTIFIER attr_type
   19           | IDENTIFIER attr_type CHECK expr

   20 attr_type: CHAR OPEN_PAR NUMBER CLOSE_PAR
   21          | INT OPEN_PAR NUMBER CLOSE_PAR
   22          | DECIMAL OPEN_PAR NUMBER CLOSE_PAR
   23          | INT
   24          | DECIMAL

   25 expr: or_expr

   26 or_expr: and_expr
   27        | or_expr OR and_expr

   28 and_expr: and_expr AND condition
   29         | condition

   30 condition: IDENTIFIER GE NUMBER
   31          | IDENTIFIER GT NUMBER
   32          | IDENTIFIER NE NUMBER
   33          | IDENTIFIER LT NUMBER
   34          | IDENTIFIER LE NUMBER
   35          | IDENTIFIER E NUMBER
   36          | OPEN_PAR expr CLOSE_PAR

   37 describe_stmt: DESCRIBE IDENTIFIER SEMICOLON

   38 drop_stmt: DROP TABLE IDENTIFIER SEMICOLON

   39 insert_stmt: INSERT INTO IDENTIFIER VALUES list_values SEMICOLON

   40 list_values: list_value
   41            | list_values COMMA list_value

   42 list_value: NUMBER
   43           | FLOAT
   44           | STRING


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CREATE (258) 7 8
    TABLE (259) 7 8 38
    CHECK (260) 19
    PRIMARY (261) 9
    KEY (262) 9 12
    FOREIGN (263) 12
    REFERENCES (264) 12
    CHAR (265) 20
    INT (266) 21 23
    DECIMAL (267) 22 24
    OPEN_PAR (268) 7 8 9 12 20 21 22 36
    CLOSE_PAR (269) 7 8 9 12 20 21 22 36
    SEMICOLON (270) 7 8 37 38 39
    COMMA (271) 7 8 11 14 17 41
    OR (272) 27
    AND (273) 28
    GE (274) 30
    GT (275) 31
    LE (276) 34
    LT (277) 33
    E (278) 35
    NE (279) 32
    DESCRIBE (280) 37
    DROP (281) 38
    INSERT (282) 39
    INTO (283) 39
    VALUES (284) 39
    IDENTIFIER <string> (285) 7 8 12 15 18 19 30 31 32 33 34 35 37 38 39
    STRING <string> (286) 44
    NUMBER <ival> (287) 20 21 22 30 31 32 33 34 35 42
    FLOAT <fval> (288) 43


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    statements (35)
        on left: 1 2
        on right: 0 2
    statement (36)
        on left: 3 4 5 6
        on right: 1 2
    create_stmt (37)
        on left: 7 8
        on right: 3
    primary_key <string_array> (38)
        on left: 9
        on right: 7 8
    foreign_keys <refer_list> (39)
        on left: 10 11
        on right: 7 11
    foreign_key <refer> (40)
        on left: 12
        on right: 10 11
    columns <string_array> (41)
        on left: 13 14
        on right: 9 14
    column <string> (42)
        on left: 15
        on right: 12 13 14
    definitions <cols> (43)
        on left: 16 17
        on right: 7 8 17
    definition <column> (44)
        on left: 18 19
        on right: 16 17
    attr_type <column> (45)
        on left: 20 21 22 23 24
        on right: 18 19
    expr <condition> (46)
        on left: 25
        on right: 19 36
    or_expr <condition> (47)
        on left: 26 27
        on right: 25 27
    and_expr <condition> (48)
        on left: 28 29
        on right: 26 27 28
    condition <condition> (49)
        on left: 30 31 32 33 34 35 36
        on right: 28 29
    describe_stmt (50)
        on left: 37
        on right: 4
    drop_stmt (51)
        on left: 38
        on right: 5
    insert_stmt (52)
        on left: 39
        on right: 6
    list_values <literals_list> (53)
        on left: 40 41
        on right: 39 41
    list_value <literal> (54)
        on left: 42 43 44
        on right: 40 41


State 0

    0 $accept: • statements $end
    1 statements: • statement
    2           | • statements statement
    3 statement: • create_stmt
    4          | • describe_stmt
    5          | • drop_stmt
    6          | • insert_stmt
    7 create_stmt: • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    8            | • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON
   37 describe_stmt: • DESCRIBE IDENTIFIER SEMICOLON
   38 drop_stmt: • DROP TABLE IDENTIFIER SEMICOLON
   39 insert_stmt: • INSERT INTO IDENTIFIER VALUES list_values SEMICOLON

    CREATE    shift, and go to state 1
    DESCRIBE  shift, and go to state 2
    DROP      shift, and go to state 3
    INSERT    shift, and go to state 4

    statements     go to state 5
    statement      go to state 6
    create_stmt    go to state 7
    describe_stmt  go to state 8
    drop_stmt      go to state 9
    insert_stmt    go to state 10


State 1

    7 create_stmt: CREATE • TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    8            | CREATE • TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

    TABLE  shift, and go to state 11


State 2

   37 describe_stmt: DESCRIBE • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 12


State 3

   38 drop_stmt: DROP • TABLE IDENTIFIER SEMICOLON

    TABLE  shift, and go to state 13


State 4

   39 insert_stmt: INSERT • INTO IDENTIFIER VALUES list_values SEMICOLON

    INTO  shift, and go to state 14


State 5

    0 $accept: statements • $end
    2 statements: statements • statement
    3 statement: • create_stmt
    4          | • describe_stmt
    5          | • drop_stmt
    6          | • insert_stmt
    7 create_stmt: • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    8            | • CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON
   37 describe_stmt: • DESCRIBE IDENTIFIER SEMICOLON
   38 drop_stmt: • DROP TABLE IDENTIFIER SEMICOLON
   39 insert_stmt: • INSERT INTO IDENTIFIER VALUES list_values SEMICOLON

    $end      shift, and go to state 15
    CREATE    shift, and go to state 1
    DESCRIBE  shift, and go to state 2
    DROP      shift, and go to state 3
    INSERT    shift, and go to state 4

    statement      go to state 16
    create_stmt    go to state 7
    describe_stmt  go to state 8
    drop_stmt      go to state 9
    insert_stmt    go to state 10


State 6

    1 statements: statement •

    $default  reduce using rule 1 (statements)


State 7

    3 statement: create_stmt •

    $default  reduce using rule 3 (statement)


State 8

    4 statement: describe_stmt •

    $default  reduce using rule 4 (statement)


State 9

    5 statement: drop_stmt •

    $default  reduce using rule 5 (statement)


State 10

    6 statement: insert_stmt •

    $default  reduce using rule 6 (statement)


State 11

    7 create_stmt: CREATE TABLE • IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    8            | CREATE TABLE • IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

    IDENTIFIER  shift, and go to state 17


State 12

   37 describe_stmt: DESCRIBE IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 18


State 13

   38 drop_stmt: DROP TABLE • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 19


State 14

   39 insert_stmt: INSERT INTO • IDENTIFIER VALUES list_values SEMICOLON

    IDENTIFIER  shift, and go to state 20


State 15

    0 $accept: statements $end •

    $default  accept


State 16

    2 statements: statements statement •

    $default  reduce using rule 2 (statements)


State 17

    7 create_stmt: CREATE TABLE IDENTIFIER • OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    8            | CREATE TABLE IDENTIFIER • OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON

    OPEN_PAR  shift, and go to state 21


State 18

   37 describe_stmt: DESCRIBE IDENTIFIER SEMICOLON •

    $default  reduce using rule 37 (describe_stmt)


State 19

   38 drop_stmt: DROP TABLE IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 22


State 20

   39 insert_stmt: INSERT INTO IDENTIFIER • VALUES list_values SEMICOLON

    VALUES  shift, and go to state 23


State 21

    7 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR • definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    8            | CREATE TABLE IDENTIFIER OPEN_PAR • definitions COMMA primary_key CLOSE_PAR SEMICOLON
   16 definitions: • definition
   17            | • definitions COMMA definition
   18 definition: • IDENTIFIER attr_type
   19           | • IDENTIFIER attr_type CHECK expr

    IDENTIFIER  shift, and go to state 24

    definitions  go to state 25
    definition   go to state 26


State 22

   38 drop_stmt: DROP TABLE IDENTIFIER SEMICOLON •

    $default  reduce using rule 38 (drop_stmt)


State 23

   39 insert_stmt: INSERT INTO IDENTIFIER VALUES • list_values SEMICOLON
   40 list_values: • list_value
   41            | • list_values COMMA list_value
   42 list_value: • NUMBER
   43           | • FLOAT
   44           | • STRING

    STRING  shift, and go to state 27
    NUMBER  shift, and go to state 28
    FLOAT   shift, and go to state 29

    list_values  go to state 30
    list_value   go to state 31


State 24

   18 definition: IDENTIFIER • attr_type
   19           | IDENTIFIER • attr_type CHECK expr
   20 attr_type: • CHAR OPEN_PAR NUMBER CLOSE_PAR
   21          | • INT OPEN_PAR NUMBER CLOSE_PAR
   22          | • DECIMAL OPEN_PAR NUMBER CLOSE_PAR
   23          | • INT
   24          | • DECIMAL

    CHAR     shift, and go to state 32
    INT      shift, and go to state 33
    DECIMAL  shift, and go to state 34

    attr_type  go to state 35


State 25

    7 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions • COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    8            | CREATE TABLE IDENTIFIER OPEN_PAR definitions • COMMA primary_key CLOSE_PAR SEMICOLON
   17 definitions: definitions • COMMA definition

    COMMA  shift, and go to state 36


State 26

   16 definitions: definition •

    $default  reduce using rule 16 (definitions)


State 27

   44 list_value: STRING •

    $default  reduce using rule 44 (list_value)


State 28

   42 list_value: NUMBER •

    $default  reduce using rule 42 (list_value)


State 29

   43 list_value: FLOAT •

    $default  reduce using rule 43 (list_value)


State 30

   39 insert_stmt: INSERT INTO IDENTIFIER VALUES list_values • SEMICOLON
   41 list_values: list_values • COMMA list_value

    SEMICOLON  shift, and go to state 37
    COMMA      shift, and go to state 38


State 31

   40 list_values: list_value •

    $default  reduce using rule 40 (list_values)


State 32

   20 attr_type: CHAR • OPEN_PAR NUMBER CLOSE_PAR

    OPEN_PAR  shift, and go to state 39


State 33

   21 attr_type: INT • OPEN_PAR NUMBER CLOSE_PAR
   23          | INT •  [CHECK, COMMA]

    OPEN_PAR  shift, and go to state 40

    $default  reduce using rule 23 (attr_type)


State 34

   22 attr_type: DECIMAL • OPEN_PAR NUMBER CLOSE_PAR
   24          | DECIMAL •  [CHECK, COMMA]

    OPEN_PAR  shift, and go to state 41

    $default  reduce using rule 24 (attr_type)


State 35

   18 definition: IDENTIFIER attr_type •  [COMMA]
   19           | IDENTIFIER attr_type • CHECK expr

    CHECK  shift, and go to state 42

    $default  reduce using rule 18 (definition)


State 36

    7 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA • primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON
    8            | CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA • primary_key CLOSE_PAR SEMICOLON
    9 primary_key: • PRIMARY KEY OPEN_PAR columns CLOSE_PAR
   17 definitions: definitions COMMA • definition
   18 definition: • IDENTIFIER attr_type
   19           | • IDENTIFIER attr_type CHECK expr

    PRIMARY     shift, and go to state 43
    IDENTIFIER  shift, and go to state 24

    primary_key  go to state 44
    definition   go to state 45


State 37

   39 insert_stmt: INSERT INTO IDENTIFIER VALUES list_values SEMICOLON •

    $default  reduce using rule 39 (insert_stmt)


State 38

   41 list_values: list_values COMMA • list_value
   42 list_value: • NUMBER
   43           | • FLOAT
   44           | • STRING

    STRING  shift, and go to state 27
    NUMBER  shift, and go to state 28
    FLOAT   shift, and go to state 29

    list_value  go to state 46


State 39

   20 attr_type: CHAR OPEN_PAR • NUMBER CLOSE_PAR

    NUMBER  shift, and go to state 47


State 40

   21 attr_type: INT OPEN_PAR • NUMBER CLOSE_PAR

    NUMBER  shift, and go to state 48


State 41

   22 attr_type: DECIMAL OPEN_PAR • NUMBER CLOSE_PAR

    NUMBER  shift, and go to state 49


State 42

   19 definition: IDENTIFIER attr_type CHECK • expr
   25 expr: • or_expr
   26 or_expr: • and_expr
   27        | • or_expr OR and_expr
   28 and_expr: • and_expr AND condition
   29         | • condition
   30 condition: • IDENTIFIER GE NUMBER
   31          | • IDENTIFIER GT NUMBER
   32          | • IDENTIFIER NE NUMBER
   33          | • IDENTIFIER LT NUMBER
   34          | • IDENTIFIER LE NUMBER
   35          | • IDENTIFIER E NUMBER
   36          | • OPEN_PAR expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    expr       go to state 52
    or_expr    go to state 53
    and_expr   go to state 54
    condition  go to state 55


State 43

    9 primary_key: PRIMARY • KEY OPEN_PAR columns CLOSE_PAR

    KEY  shift, and go to state 56


State 44

    7 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key • COMMA foreign_keys CLOSE_PAR SEMICOLON
    8            | CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key • CLOSE_PAR SEMICOLON

    CLOSE_PAR  shift, and go to state 57
    COMMA      shift, and go to state 58


State 45

   17 definitions: definitions COMMA definition •

    $default  reduce using rule 17 (definitions)


State 46

   41 list_values: list_values COMMA list_value •

    $default  reduce using rule 41 (list_values)


State 47

   20 attr_type: CHAR OPEN_PAR NUMBER • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 59


State 48

   21 attr_type: INT OPEN_PAR NUMBER • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 60


State 49

   22 attr_type: DECIMAL OPEN_PAR NUMBER • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 61


State 50

   25 expr: • or_expr
   26 or_expr: • and_expr
   27        | • or_expr OR and_expr
   28 and_expr: • and_expr AND condition
   29         | • condition
   30 condition: • IDENTIFIER GE NUMBER
   31          | • IDENTIFIER GT NUMBER
   32          | • IDENTIFIER NE NUMBER
   33          | • IDENTIFIER LT NUMBER
   34          | • IDENTIFIER LE NUMBER
   35          | • IDENTIFIER E NUMBER
   36          | • OPEN_PAR expr CLOSE_PAR
   36          | OPEN_PAR • expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    expr       go to state 62
    or_expr    go to state 53
    and_expr   go to state 54
    condition  go to state 55


State 51

   30 condition: IDENTIFIER • GE NUMBER
   31          | IDENTIFIER • GT NUMBER
   32          | IDENTIFIER • NE NUMBER
   33          | IDENTIFIER • LT NUMBER
   34          | IDENTIFIER • LE NUMBER
   35          | IDENTIFIER • E NUMBER

    GE  shift, and go to state 63
    GT  shift, and go to state 64
    LE  shift, and go to state 65
    LT  shift, and go to state 66
    E   shift, and go to state 67
    NE  shift, and go to state 68


State 52

   19 definition: IDENTIFIER attr_type CHECK expr •

    $default  reduce using rule 19 (definition)


State 53

   25 expr: or_expr •  [CLOSE_PAR, COMMA]
   27 or_expr: or_expr • OR and_expr

    OR  shift, and go to state 69

    $default  reduce using rule 25 (expr)


State 54

   26 or_expr: and_expr •  [CLOSE_PAR, COMMA, OR]
   28 and_expr: and_expr • AND condition

    AND  shift, and go to state 70

    $default  reduce using rule 26 (or_expr)


State 55

   29 and_expr: condition •

    $default  reduce using rule 29 (and_expr)


State 56

    9 primary_key: PRIMARY KEY • OPEN_PAR columns CLOSE_PAR

    OPEN_PAR  shift, and go to state 71


State 57

    8 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR • SEMICOLON

    SEMICOLON  shift, and go to state 72


State 58

    7 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA • foreign_keys CLOSE_PAR SEMICOLON
   10 foreign_keys: • foreign_key
   11             | • foreign_keys COMMA foreign_key
   12 foreign_key: • FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    FOREIGN  shift, and go to state 73

    foreign_keys  go to state 74
    foreign_key   go to state 75


State 59

   20 attr_type: CHAR OPEN_PAR NUMBER CLOSE_PAR •

    $default  reduce using rule 20 (attr_type)


State 60

   21 attr_type: INT OPEN_PAR NUMBER CLOSE_PAR •

    $default  reduce using rule 21 (attr_type)


State 61

   22 attr_type: DECIMAL OPEN_PAR NUMBER CLOSE_PAR •

    $default  reduce using rule 22 (attr_type)


State 62

   36 condition: OPEN_PAR expr • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 76


State 63

   30 condition: IDENTIFIER GE • NUMBER

    NUMBER  shift, and go to state 77


State 64

   31 condition: IDENTIFIER GT • NUMBER

    NUMBER  shift, and go to state 78


State 65

   34 condition: IDENTIFIER LE • NUMBER

    NUMBER  shift, and go to state 79


State 66

   33 condition: IDENTIFIER LT • NUMBER

    NUMBER  shift, and go to state 80


State 67

   35 condition: IDENTIFIER E • NUMBER

    NUMBER  shift, and go to state 81


State 68

   32 condition: IDENTIFIER NE • NUMBER

    NUMBER  shift, and go to state 82


State 69

   27 or_expr: or_expr OR • and_expr
   28 and_expr: • and_expr AND condition
   29         | • condition
   30 condition: • IDENTIFIER GE NUMBER
   31          | • IDENTIFIER GT NUMBER
   32          | • IDENTIFIER NE NUMBER
   33          | • IDENTIFIER LT NUMBER
   34          | • IDENTIFIER LE NUMBER
   35          | • IDENTIFIER E NUMBER
   36          | • OPEN_PAR expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    and_expr   go to state 83
    condition  go to state 55


State 70

   28 and_expr: and_expr AND • condition
   30 condition: • IDENTIFIER GE NUMBER
   31          | • IDENTIFIER GT NUMBER
   32          | • IDENTIFIER NE NUMBER
   33          | • IDENTIFIER LT NUMBER
   34          | • IDENTIFIER LE NUMBER
   35          | • IDENTIFIER E NUMBER
   36          | • OPEN_PAR expr CLOSE_PAR

    OPEN_PAR    shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    condition  go to state 84


State 71

    9 primary_key: PRIMARY KEY OPEN_PAR • columns CLOSE_PAR
   13 columns: • column
   14        | • columns COMMA column
   15 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 85

    columns  go to state 86
    column   go to state 87


State 72

    8 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key CLOSE_PAR SEMICOLON •

    $default  reduce using rule 8 (create_stmt)


State 73

   12 foreign_key: FOREIGN • KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    KEY  shift, and go to state 88


State 74

    7 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys • CLOSE_PAR SEMICOLON
   11 foreign_keys: foreign_keys • COMMA foreign_key

    CLOSE_PAR  shift, and go to state 89
    COMMA      shift, and go to state 90


State 75

   10 foreign_keys: foreign_key •

    $default  reduce using rule 10 (foreign_keys)


State 76

   36 condition: OPEN_PAR expr CLOSE_PAR •

    $default  reduce using rule 36 (condition)


State 77

   30 condition: IDENTIFIER GE NUMBER •

    $default  reduce using rule 30 (condition)


State 78

   31 condition: IDENTIFIER GT NUMBER •

    $default  reduce using rule 31 (condition)


State 79

   34 condition: IDENTIFIER LE NUMBER •

    $default  reduce using rule 34 (condition)


State 80

   33 condition: IDENTIFIER LT NUMBER •

    $default  reduce using rule 33 (condition)


State 81

   35 condition: IDENTIFIER E NUMBER •

    $default  reduce using rule 35 (condition)


State 82

   32 condition: IDENTIFIER NE NUMBER •

    $default  reduce using rule 32 (condition)


State 83

   27 or_expr: or_expr OR and_expr •  [CLOSE_PAR, COMMA, OR]
   28 and_expr: and_expr • AND condition

    AND  shift, and go to state 70

    $default  reduce using rule 27 (or_expr)


State 84

   28 and_expr: and_expr AND condition •

    $default  reduce using rule 28 (and_expr)


State 85

   15 column: IDENTIFIER •

    $default  reduce using rule 15 (column)


State 86

    9 primary_key: PRIMARY KEY OPEN_PAR columns • CLOSE_PAR
   14 columns: columns • COMMA column

    CLOSE_PAR  shift, and go to state 91
    COMMA      shift, and go to state 92


State 87

   13 columns: column •

    $default  reduce using rule 13 (columns)


State 88

   12 foreign_key: FOREIGN KEY • OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    OPEN_PAR  shift, and go to state 93


State 89

    7 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR • SEMICOLON

    SEMICOLON  shift, and go to state 94


State 90

   11 foreign_keys: foreign_keys COMMA • foreign_key
   12 foreign_key: • FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    FOREIGN  shift, and go to state 73

    foreign_key  go to state 95


State 91

    9 primary_key: PRIMARY KEY OPEN_PAR columns CLOSE_PAR •

    $default  reduce using rule 9 (primary_key)


State 92

   14 columns: columns COMMA • column
   15 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 85

    column  go to state 96


State 93

   12 foreign_key: FOREIGN KEY OPEN_PAR • column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR
   15 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 85

    column  go to state 97


State 94

    7 create_stmt: CREATE TABLE IDENTIFIER OPEN_PAR definitions COMMA primary_key COMMA foreign_keys CLOSE_PAR SEMICOLON •

    $default  reduce using rule 7 (create_stmt)


State 95

   11 foreign_keys: foreign_keys COMMA foreign_key •

    $default  reduce using rule 11 (foreign_keys)


State 96

   14 columns: columns COMMA column •

    $default  reduce using rule 14 (columns)


State 97

   12 foreign_key: FOREIGN KEY OPEN_PAR column • CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    CLOSE_PAR  shift, and go to state 98


State 98

   12 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR • REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR

    REFERENCES  shift, and go to state 99


State 99

   12 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES • IDENTIFIER OPEN_PAR column CLOSE_PAR

    IDENTIFIER  shift, and go to state 100


State 100

   12 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER • OPEN_PAR column CLOSE_PAR

    OPEN_PAR  shift, and go to state 101


State 101

   12 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR • column CLOSE_PAR
   15 column: • IDENTIFIER

    IDENTIFIER  shift, and go to state 85

    column  go to state 102


State 102

   12 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column • CLOSE_PAR

    CLOSE_PAR  shift, and go to state 103


State 103

   12 foreign_key: FOREIGN KEY OPEN_PAR column CLOSE_PAR REFERENCES IDENTIFIER OPEN_PAR column CLOSE_PAR •

    $default  reduce using rule 12 (foreign_key)
